{"version":3,"sources":["components/Header.js","components/Home.js","components/FavouritesItem.js","components/FavouritesList.js","components/PlayFilters.js","components/FavouriteButton.js","components/PlayMatches.js","components/PlayList.js","components/PlayOverview.js","components/PlayDataTabBar.js","components/PlayDataView.js","components/PlayData.js","components/PlayDetailApp.js","components/About.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","href","onClick","toggleAbout","toggleUser","Home","id","type","title","document","getElementById","value","setFilteredPlays","FavouritesItem","play","console","log","setCurrentPlay","removeFromFavourites","FavouritesList","toggleArrowSymbol","parentElement","querySelector","toggleButton","classList","contains","innerHTML","favourites","map","p","toggle","PlayFilters","genres","g","i","before","checked","beforeYear","after","afterYear","genre","FavouriteButton","addToFavourites","PlayMatches","handleHeaderClick","e","target","handleViewClick","plays","length","likelyDate","PlayList","filters","PlayOverview","handleFavouritesClick","handleSelectChange","name","setPlayFilter","currentTab","acts","playData","scenes","currentAct","characters","push","uniq","currentScene","speeches","s","speaker","onChange","a","c","placeholder","setSearchText","synopsis","PlayDataTabBar","handleOnClick","setCurrentTab","getClassName","t","tabs","PlayDataView","wiki","gutenberg","shakespeareOrg","desc","persona","player","stageDirection","filter","currentCharacter","lines","l","searchWords","searchText","textToHighlight","PlayData","PlayDetailApp","state","filename","this","foundPlayData","savedPlayData","find","url","fetch","response","json","data","playText","setState","savePlayData","error","foundAct","foundScene","text","tab","React","Component","About","isOpen","modalIsOpen","contentLabel","toggleModal","User","user","profile","membership","picture","firstname","lastname","city","country","date_joined","src","thumbnail","alt","App","currentPlay","filteredPlays","aboutIsOpen","userIsOpen","orderType","reset","cloneDeep","toLowerCase","includes","sort","b","aTitle","bTitle","Number","favouritesCopy","index","findIndex","splice","path","exact","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","playDataCopy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7e81135a.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./css/Header.css\";\n\nconst Header = (props) => {\n    const handleAboutClick = () => {\n        props.toggleAbout();\n    }\n    \n    const handleUserClick = () => {\n        props.toggleUser();\n    }\n    \n    return (\n        <div className=\"header\">\n            <Link to=\"/\"><span>Play Browser</span></Link>\n            <a href=\"https://comp4513-assign2.herokuapp.com/logout\"><button>Logout</button></a>\n            <button onClick={handleAboutClick}>About</button>\n            <button onClick={handleUserClick}>Profile</button>\n        </div>\n    );\n};\n\nexport default Header","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./css/Home.css\";\n\nconst Home = (props) => {\n    const handleMatchingClick = () => {\n        const title = document.getElementById(\"title\").value;\n        props.setFilteredPlays({\"title\": title}, \"title\");\n    }\n    \n    const handleAllClick = () => {\n        props.setFilteredPlays({}, \"title\");\n    }\n    \n    return (\n        <div className=\"home\">\n            <article className=\"article\">\n                <form className=\"form\">\n                    <legend>Play Browser</legend>\n                    <label>Search Play Title</label><input id=\"title\" type=\"text\"/><br/>\n                    <Link to=\"/play-list\"><button onClick={handleMatchingClick}>Show Matching Plays</button></Link>\n                    <Link to=\"/play-list\"><button onClick={handleAllClick}>Show All Plays</button></Link><br/>\n                </form>\n            </article>\n            <p>Phantom of the Opera at Istana Budaya, Kuala Lumpur. World Tour 2019.</p>\n        </div>\n    );\n};\n\nexport default Home","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./css/FavouritesItem.css\";\n\nconst FavouritesItem = (props) => {\n    const handleOnClick = () => {\n        props.removeFromFavourites(props.play);\n    }\n    \n    const handleViewClick = (play) => {\n        console.log(play);\n        props.setCurrentPlay(play);\n    }\n    \n    return (\n        <div className=\"favourites-item\">\n            <Link to=\"/play-detail\"><span onClick={() => {handleViewClick(props.play)}}>{props.play.title}</span></Link>\n            <button onClick={handleOnClick}>Remove</button>\n        </div>\n    );\n};\n\nexport default FavouritesItem","import React from \"react\";\nimport FavouritesItem from \"./FavouritesItem.js\";\nimport \"./css/FavouritesList.css\";\n\nconst FavouritesList = (props) => {\n    const handleToggleClick = () => {\n        //toggle favourites visibility\n        let parentElement = document.querySelector(\".favourites-list\").parentElement; \n        parentElement.classList.toggle(\"hide-favourites\");\n        toggleArrowSymbol();\n    }\n    \n    const toggleArrowSymbol = () => {\n        //get appropriate arrow symbol\n        let parentElement = document.querySelector(\".favourites-list\").parentElement; \n        let toggleButton = document.getElementById(\"toggle-button\");\n        \n        if (parentElement.classList.contains(\"hide-favourites\")) {toggleButton.innerHTML = \"▶\"}\n        else {toggleButton.innerHTML = \"◀\"}\n    }\n    \n    if (props.favourites) {\n        return (\n            <div className=\"favourites-list\">\n                <h1>Favourites</h1>\n                <ul>\n                {props.favourites.map((p) => \n                    <li key={p.id}>\n                        <FavouritesItem play={p} \n                                        removeFromFavourites={props.removeFromFavourites} \n                                        setCurrentPlay={props.setCurrentPlay}/>\n                    </li>\n                )}\n                </ul>\n                <button id=\"toggle-button\" onClick={handleToggleClick}>◀</button>\n            </div>\n        );\n    }\n    else {\n        return null;\n    }\n};\n\nexport default FavouritesList","import React from \"react\";\nimport \"./css/PlayFilters.css\";\n\nconst PlayFilters = (props) => {\n    const handleFilterClick = () => {\n        //get value from each input element\n        const title = document.getElementById(\"title\").value;\n        const before = document.getElementById(\"before\").checked;\n        const beforeYear = document.getElementById(\"beforeYear\").value;\n        const after = document.getElementById(\"after\").checked;\n        const afterYear = document.getElementById(\"afterYear\").value;\n        const genre = document.getElementById(\"genre\").value;\n        \n        //filter plays with input values\n        props.setFilteredPlays({\"title\": title,\n                                \"before\": before,\n                                \"beforeYear\": beforeYear,\n                                \"after\": after,\n                                \"afterYear\": afterYear,\n                                \"genre\": genre\n                               }, null, true);\n    }\n    \n    const handleClearClick = () => {\n        //set input values to initial values\n        document.getElementById(\"title\").value = \"\";\n        document.getElementById(\"before\").checked = false;\n        document.getElementById(\"beforeYear\").value = \"\";\n        document.getElementById(\"after\").checked = false;\n        document.getElementById(\"afterYear\").value = \"\";\n        document.getElementById(\"genre\").value = \"\";\n        \n        //remove filters from plays\n        props.setFilteredPlays({}, null, true);\n    }\n    \n    \n    return (\n        <div className=\"play-filters\">\n            <form className=\"filter-form\">\n                <h1 className=\"filter-header\">Play Filters</h1>\n                <label className=\"main\">Title</label><br/>\n                <input className=\"full\" id=\"title\" type=\"text\"/><br/>\n                <label className=\"main\">Year</label><br/>\n                <div className=\"before-filters\">\n                    <input id=\"before\" type=\"checkbox\"/><label className=\"sub\">Before:</label>\n                    <input className=\"partial\" id=\"beforeYear\" type=\"text\"/>\n                </div>\n                <div className=\"after-filters\">\n                    <input id=\"after\" type=\"checkbox\"/><label className=\"sub\">After:</label>\n                    <input className=\"partial\" id=\"afterYear\" type=\"text\"/>\n                </div>\n                <label className=\"main\">Genre</label><br/>\n                <select id=\"genre\">\n                    {props.genres.map((g, i) => \n                        <option key={i} value={g}>{g}</option>                          \n                    )}\n                </select>\n            </form>\n            <div className=\"button-container\">\n                <button className=\"filter-button\" onClick={handleFilterClick}>Filter</button>\n                <button className=\"filter-button\" onClick={handleClearClick}>Clear</button>\n            </div>\n        </div>\n    );\n};\n\nexport default PlayFilters","import React from \"react\";\n\nconst FavouriteButton = (props) => {\n    const handleOnClick = () => {\n        props.addToFavourites(props.play);\n    }\n    \n    return (\n        <button onClick={handleOnClick}>♥</button>\n    );\n};\n\nexport default FavouriteButton","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport FavouriteButton from \"./FavouriteButton.js\";\nimport \"./css/PlayMatches.css\";\n\nconst PlayMatches = (props) => {\n    const handleHeaderClick = (e) => {\n        //sort plays by selected sort type\n        props.setFilteredPlays({}, e.target.title, false);\n    }\n    \n    const handleViewClick = (play) => {\n        props.setCurrentPlay(play);\n    }\n    \n    if (props.plays && props.plays.length > 0) {\n        return (\n            <div className=\"play-matches\">\n                <h1>List/Matches</h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <th title=\"title\" onClick={handleHeaderClick}>Title</th>\n                            <th title=\"year\" onClick={handleHeaderClick}>Year</th>  \n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                </table>\n                <hr/>\n                <div className=\"table-body\">\n                    <table>\n                        <tbody>\n                        {props.plays.map((p) => \n                            <tr key={p.id}>\n                                <td onClick={() => {handleViewClick(p)}}><Link to=\"/play-detail\">{p.title}</Link></td>\n                                <td>{p.likelyDate}</td>\n                                <td><FavouriteButton play={p} addToFavourites={props.addToFavourites}/></td>\n                                <td><Link to=\"/play-detail\"><button onClick={() => {handleViewClick(p)}}>View</button></Link></td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n                <hr/>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"play-matches\">\n                <h1>List/Matches</h1>\n                <p>No plays found!</p>\n            </div>\n        )\n    }\n};\n\nexport default PlayMatches","import React from \"react\";\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayFilters from \"./PlayFilters.js\";\nimport PlayMatches from \"./PlayMatches.js\";\nimport \"./css/PlayList.css\";\n\nconst PlayList = (props) => {\n    return (\n        <div className=\"play-list\">\n                <FavouritesList favourites={props.favourites} \n                                removeFromFavourites={props.removeFromFavourites} \n                                setCurrentPlay={props.setCurrentPlay}/>\n                <PlayFilters filters={props.filters} \n                             setFilteredPlays={props.setFilteredPlays} \n                             genres={props.genres}/>\n                <PlayMatches plays={props.plays} \n                             setFilteredPlays={props.setFilteredPlays} \n                             addToFavourites={props.addToFavourites} \n                             setCurrentPlay={props.setCurrentPlay}/>\n\n        </div>\n//        <CSSTransitionGroup transitionName=\"favourites\" \n//                            transitionAppear={true} \n//                            transitionAppearTimeout={500}\n//                            transitionEnterTimeout={500} \n//                            transitionLeaveTimeout={500}>\n//        </CSSTransitionGroup>\n    );\n};\n\nexport default PlayList","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {uniq} from 'lodash';\nimport \"./css/PlayOverview.css\";\n\nconst PlayOverview = (props) => {\n    const handleFavouritesClick = () => {\n        props.addToFavourites(props.play);\n    }\n    \n    const handleSelectChange = (e) => {\n        const {name, value} = e.target;\n        props.setPlayFilter(name, value);\n    }\n    \n    const handleTextChange = (e) => {\n        props.setSearchText(e.target.value);\n    }\n    \n    //if current tab is text, deisplay filter options\n    if (props.currentTab === \"Text\") {\n        const acts = props.playData.acts;\n        const scenes = props.currentAct.scenes;\n        const characters = [\"All Players\"]; //add all players to list of characters\n        characters.push(...uniq(props.currentScene.speeches.map((s) => s.speaker)));\n        \n        return (\n            <div className=\"play-overview\">\n                <h1>{props.play.title}</h1>\n                <select name=\"act\" onChange={handleSelectChange}>{acts.map((a) => \n                    <option key={a.name} value={a.name}>{a.name}</option>)}\n                </select>\n                <select name=\"scene\" onChange={handleSelectChange}>{scenes.map((s) => \n                    <option key={s.name} value={s.name}>{s.name}</option>)}\n                </select>\n                <fieldset>\n                    <select name=\"character\" onChange={handleSelectChange}>{characters.map((c) => \n                        <option key={c} value={c}>{c}</option>)}\n                    </select>      \n                    <input type=\"text\" placeholder=\"Enter a search term\" onChange={handleTextChange}/>\n                </fieldset>\n                <Link to=\"/play-list\"><button>Close</button></Link>\n                <button onClick={handleFavouritesClick}>♥</button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"play-overview\">\n                <h1>{props.play.title}</h1>\n                <p>{props.play.synopsis}</p>\n                <Link to=\"/play-list\"><button>Close</button></Link>\n                <button onClick={handleFavouritesClick}>♥</button>\n            </div>\n        );\n    }\n};\n\nexport default PlayOverview","import React from \"react\";\nimport \"./css/PlayDataTabBar.css\";\n\nconst PlayDataTabBar = (props) => {\n    const handleOnClick = (e) => {\n        if (e.target.title !== props.currentTab) {\n            //toggle active tabs\n            e.target.classList.toggle(\"active\");\n            props.setCurrentTab(e.target.title);\n        }\n    }\n    \n    const getClassName = (t) => {\n        //set initial active tab\n        return (t === props.currentTab ? \"active\" : \"\");\n    }\n    \n    return (\n        <div className=\"tab-bar\">\n            {props.tabs.map((t) => \n                <button className={getClassName(t)} key={t} title={t} onClick={handleOnClick}>{t}</button>\n            )}\n        </div>\n    );\n};\n\nexport default PlayDataTabBar","import React from \"react\";\nimport Highlighter from \"react-highlight-words\";\nimport \"./css/PlayDataView.css\";\n\nconst PlayDataView = (props) => {\n    const highlightText = (text) => {\n        //replace found search text, with text wrapped in strong element\n        const searchText = props.searchText;\n        return (text.replace(searchText, \"<strong>\" + searchText + \"</strong>\"));\n    }\n    \n    //display data according to current tab\n    if (props.currentTab === \"Details\") {\n        return (\n            <div className=\"data-view\">\n                <p><strong>Likely date of composition:</strong> {props.play.likelyDate}</p>\n                <p><strong>Genre:</strong> {props.play.genre}</p>\n                <p><strong>Wiki Link:</strong> <a href={props.play.wiki}>{props.play.wiki}</a></p>\n                <p><strong>Gutenberg:</strong> <a href={props.play.gutenberg}>{props.play.gutenberg}</a></p>\n                <p><strong>Shakespeare.org Link:</strong> <a href={props.play.shakespeareOrg}>{props.play.shakespeareOrg}</a></p>\n                <p><strong>Description:</strong></p>\n                <p>{props.play.desc}</p>\n            </div>\n        );\n    }\n    else if (props.playData === null || props.currentAct === null) {\n        return (\n            <div className=\"data-view\"></div>\n        );\n    }\n    else if (props.currentTab === \"Characters\") {\n        return (\n            <div className=\"data-view\">\n                {props.playData.persona.map((p) =>\n                    <p key={p.player}><strong>{p.player}</strong> - {p.desc ? p.desc : \"No description\"}</p>\n                )}\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"data-view\">\n                <h2>{props.playData.title}</h2>\n                <article id=\"actHere\">\n                    <h3>{props.currentAct.name}</h3>\n                    <div id=\"sceneHere\">\n                        <h4>{props.currentScene.name}</h4>\n                        <p>{props.currentScene.title}</p>\n                        <p>{props.currentScene.stageDirection}</p>\n                        {props.currentScene.speeches.filter((s) => \n                            //if 'all players' is selected return all speeches\n                            //else return speeches based on current character\n                            props.currentCharacter === \"All Players\" ? true : props.currentCharacter === s.speaker\n                        ).map((s, i) => \n                            <div key={i}>\n                                <p className=\"speaker\"><strong>{s.speaker}</strong></p>\n                                {s.lines.map((l, i) => \n                                    <p className=\"line\" key={i}>\n                                         <Highlighter searchWords={[props.searchText]} textToHighlight={l}/>\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                </article>\n            </div>\n        );\n    }\n};\n\nexport default PlayDataView","import React from \"react\";\nimport PlayDataTabBar from \"./PlayDataTabBar.js\";\nimport PlayDataView from \"./PlayDataView.js\";\n\nconst PlayData = (props) => {\n    return (\n        <div className=\"container\">\n            <PlayDataTabBar tabs={props.tabs} \n                            currentTab={props.currentTab} \n                            setCurrentTab={props.setCurrentTab}/>\n            <hr/>\n            <PlayDataView currentTab={props.currentTab} \n                          play={props.play} \n                          playData={props.playData}\n                          currentAct={props.currentAct}\n                          currentScene={props.currentScene}\n                          currentCharacter={props.currentCharacter}\n                          searchText={props.searchText}/>\n            <hr/>\n        </div>\n    );\n}\n\nexport default PlayData","import React from \"react\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayOverview from \"./PlayOverview.js\";\nimport PlayData from \"./PlayData.js\";\nimport \"./css/PlayDetailApp.css\";\n\nclass PlayDetailApp extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        //initialize available tabs\n        const tabs = [\"Details\", \"Characters\", \"Text\"];\n        \n        //initialize state values\n        this.state = {currentTab: tabs[0],\n                      tabs: props.play.filename ? tabs : [tabs[0]],\n                      playData: [],\n                      currentAct: null,\n                      currentScene: null,\n                      currentCharacter: \"All Players\",\n                      searchText: \"\"};\n    }\n                            \n    async componentDidMount() {\n        //only get data if filename is not null\n        if (this.props.play.filename) {\n            //find saved data with play id\n            const foundPlayData = this.props.savedPlayData.find((p) => p.id === this.props.play.id);\n            \n            //if not saved data is found, fetch\n            if (!foundPlayData) {\n                try {\n                    const url = \"https://comp4513-assign2.herokuapp.com/api/play/\" + this.props.play.id;\n                    const response = await fetch(url);\n                    const data = await response.json();\n                    const playText = data[0].playText;\n                    this.setState({playData: playText});\n                    //console.log(playText);\n                    \n                    //set current act and scene with first in arrays\n                    this.setState({currentAct: playText.acts[0]});\n                    this.setState({currentScene: playText.acts[0].scenes[0]});\n                    \n                    //save play data\n                    this.props.savePlayData(this.props.play, playText);\n                } \n                catch {\n                    console.error(\"fetch error\");\n                }\n            }\n            else {\n                //if saved play data is found, set state values\n                this.setState({playData: foundPlayData.data});\n                this.setState({currentAct: foundPlayData.data.acts[0]});\n                this.setState({currentScene: foundPlayData.data.acts[0].scenes[0]});\n            }\n        }\n    }\n    \n    render() {\n        const setCurrentTab = (tab) => {\n            this.setState({currentTab: tab});\n        }\n        \n        const setPlayFilter = (name, value) => {\n            if (name === \"act\") {\n                //find act from play data and set first scene\n                const foundAct = this.state.playData.acts.find((a) => a.name === value);\n                this.setState({currentAct: foundAct});\n                this.setState({currentScene: foundAct.scenes[0]});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"scene\") {\n                //find scene from current act\n                const foundScene = this.state.currentAct.scenes.find((s) => s.name === value);\n                this.setState({currentScene: foundScene});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"character\") {\n                //set current character\n                this.setState({currentCharacter: value});\n            }\n        }\n        \n        const setSearchText = (text) => {\n            this.setState({searchText: text});\n        }\n        \n        return (\n            <div className=\"play-detail hide-favourites\">\n                <FavouritesList favourites={this.props.favourites} \n                                removeFromFavourites={this.props.removeFromFavourites}/>\n                <PlayOverview currentTab={this.state.currentTab} \n                              play={this.props.play} \n                              playData={this.state.playData} \n                              currentAct={this.state.currentAct} \n                              currentScene={this.state.currentScene} \n                              addToFavourites={this.props.addToFavourites}\n                              setPlayFilter={setPlayFilter}\n                              setSearchText={setSearchText}/>\n                <PlayData currentTab={this.state.currentTab} \n                          tabs={this.state.tabs} \n                          play={this.props.play} \n                          playData={this.state.playData} \n                          currentAct={this.state.currentAct}\n                          currentScene={this.state.currentScene}\n                          currentCharacter={this.state.currentCharacter}\n                          searchText={this.state.searchText}\n                          setCurrentTab={setCurrentTab}/>\n            </div>\n        );\n    }\n};\n\nexport default PlayDetailApp","import React from \"react\";\nimport Modal from 'react-modal';\nimport \"./css/About.css\";\n\nconst About = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    return (\n        <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"about\">\n            <h1>About</h1>\n            <p className=\"subtitle\">Group Members</p>\n            <p>Brian Atuh</p>\n            <p className=\"subtitle\">GitHub Link</p>\n            <p><a href=\"https://github.com/batuh836/comp4513_assignment1\">Comp4513_Assignment1</a></p>\n            <button onClick={handleOnClick}>Close</button>\n        </Modal>\n    );\n};\n\nexport default About","import React from \"react\";\nimport Modal from 'react-modal';\nimport \"./css/User.css\";\n\nconst User = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    if (props.user) {\n        const profile = props.user.profile;\n        const membership = props.user.membership;\n        const picture = props.user.picture;\n        return (\n            <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"user\">\n                <h1>Profile</h1>\n                <span>Name: {profile.firstname} {profile.lastname}</span>\n                <span>Location: {profile.city}, {profile.country}</span>\n                <span>Joined: {membership.date_joined}</span>\n                <img src={picture.thumbnail} alt=\"picture\"/>\n                <button onClick={handleOnClick}>Close</button>\n            </Modal>\n        );\n    }\n    else {\n        return null;\n    }\n};\n\nexport default User","import React from \"react\";\nimport './App.css';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport {Route} from 'react-router-dom';\nimport {cloneDeep, uniq} from 'lodash';\nimport Header from \"./components/Header.js\";\nimport Home from \"./components/Home.js\";\nimport PlayList from \"./components/PlayList.js\";\nimport PlayDetailApp from \"./components/PlayDetailApp.js\";\nimport About from \"./components/About.js\";\nimport User from \"./components/User.js\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        //set states to initial values\n        this.state = {user: null,\n                      plays: [],\n                      genres: [],\n                      currentPlay: null,\n                      filteredPlays: [],\n                      favourites: [],\n                      savedPlayData: [],\n                      aboutIsOpen: false,\n                      userIsOpen: false};\n    }\n                            \n    async componentDidMount() {\n        try {\n            const url = \"https://comp4513-assign2.herokuapp.com/user\";\n            const response = await fetch(url);\n            const data = await response.json();\n            this.setState({user: data});\n        } \n        catch {\n            console.error(\"fetch error\");\n        }\n\n        //only get data if plays is empty\n        if (!this.state.plays.length) {\n            try {\n                const url = \"https://comp4513-assign2.herokuapp.com/api/list\";\n                const response = await fetch(url);\n                const data = await response.json();\n                \n                this.setState({plays: data});\n                this.setState({filteredPlays: data});\n                \n                //add unique genres to state\n                var genres = [\"\"];\n                genres.push(...uniq(data.map((p) => p.genre)));\n                this.setState({genres: genres});\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n    }\n    \n    render() {\n        //methods\n        const setCurrentPlay = (play) => {\n            this.setState({currentPlay: play});\n        }\n        \n        const toggleAbout = () => {\n            if (this.state.aboutIsOpen) {\n                this.setState({aboutIsOpen: false});\n            }\n            else {\n                this.setState({aboutIsOpen: true});\n            }\n        }\n        \n        const toggleUser = () => {\n            if (this.state.userIsOpen) {\n                this.setState({userIsOpen: false});\n            }\n            else {\n                this.setState({userIsOpen: true});\n            }\n        }\n        \n        const setFilteredPlays = (filters, orderType, reset) => {\n            var filteredPlays = reset ? cloneDeep(this.state.plays) : cloneDeep(this.state.filteredPlays); \n            \n            //filter by title\n            if (filters.title) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.title.toLowerCase().includes(filters.title.toLowerCase()));\n            }\n            \n            //filter by beforeYear, if enabled\n            if (filters.before && filters.beforeYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate < filters.beforeYear);\n            }\n            \n            //filter by afterYear, if enabled\n            if (filters.after && filters.afterYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate > filters.afterYear);\n            }\n            \n            //filter by genre\n            if (filters.genre) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.genre === filters.genre);\n            }\n            \n            //order filtered plays\n            if (orderType) {\n                if (orderType === \"title\") {\n                    filteredPlays = filteredPlays.sort((a,b) => {\n                                        let aTitle = a.title.toLowerCase();\n                                        let bTitle = b.title.toLowerCase(); \n                                        if (aTitle > bTitle) {return 1}\n                                        else if (aTitle < bTitle) {return -1}\n                                        else {return 0}\n                                    });\n                }\n                else if (orderType === \"year\") {\n                    filteredPlays = filteredPlays.sort((a,b) => \n                                        Number(a.likelyDate) - Number(b.likelyDate));\n                }\n            }\n            \n//            console.log(filters);\n//            console.log(filteredPlays);\n            this.setState({filteredPlays: filteredPlays});\n        }\n        \n        const addToFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //prevent duplicates from being added\n            if (!favouritesCopy.find((p) => p.id === play.id)) {\n                favouritesCopy.push(play);\n            }\n            \n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const removeFromFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //get index of play and remove it\n            const index = favouritesCopy.findIndex((p) => p.id === play.id);\n            favouritesCopy.splice(index, 1);\n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const savePlayData = (play, data) => {\n            const playDataCopy = cloneDeep(this.state.savedPlayData);\n            \n            //save play data with corresponding id\n            playDataCopy.push({id: play.id, data: data});\n            this.setState({savedPlayData: playDataCopy});\n        }\n        \n        return (\n            <div className=\"app\">\n                <Route path=\"/\" exact>\n                    <CSSTransitionGroup transitionName=\"landing\" \n                                        transitionAppear={true} \n                                        transitionAppearTimeout={500}\n                                        transitionEnterTimeout={500} \n                                        transitionLeaveTimeout={500}>\n                        <Home setFilteredPlays={setFilteredPlays}/>\n                    </CSSTransitionGroup>\n                </Route>\n                <Route path=\"/play-list\" exact>\n                    <Header toggleAbout={toggleAbout} toggleUser={toggleUser}/>\n                    <PlayList plays={this.state.filteredPlays}\n                              genres={this.state.genres}\n                              favourites={this.state.favourites}\n                              filters={this.state.filters}\n                              setFilteredPlays={setFilteredPlays} \n                              addToFavourites={addToFavourites}\n                              removeFromFavourites={removeFromFavourites}\n                              setCurrentPlay={setCurrentPlay}/>\n                </Route>\n                <Route path=\"/play-detail\" exact>\n                    <Header toggleAbout={toggleAbout} toggleUser={toggleUser}/>\n                    <PlayDetailApp play={this.state.currentPlay}\n                                   savedPlayData={this.state.savedPlayData}\n                                   favourites={this.state.favourites}\n                                   addToFavourites={addToFavourites}\n                                   removeFromFavourites={removeFromFavourites}\n                                   savePlayData={savePlayData}/>\n                </Route>\n                <About modalIsOpen={this.state.aboutIsOpen} toggleModal={toggleAbout}/>\n                <User modalIsOpen={this.state.userIsOpen} toggleModal={toggleUser} user={this.state.user}/>\n            </div>\n        );                \n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter><App/></BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n//ReactDOMServer.renderToString(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n//ReactDOMServer.renderToStaticMarkup(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}