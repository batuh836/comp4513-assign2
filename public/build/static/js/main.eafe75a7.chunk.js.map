{"version":3,"sources":["components/Header.js","components/Home.js","components/FavouritesItem.js","components/FavouritesList.js","components/PlayFilters.js","components/FavouriteButton.js","components/PlayMatches.js","components/PlayList.js","components/PlayOverview.js","components/PlayDataTabBar.js","components/PlayDataView.js","components/PlayData.js","components/PlayDetailApp.js","components/About.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","href","onClick","toggleAbout","toggleUser","Title","Typography","Home","level","Item","label","id","type","icon","SearchOutlined","title","document","getElementById","value","setFilteredPlays","FavouritesItem","play","console","log","setCurrentPlay","removeFromFavourites","FavouritesList","toggleArrowSymbol","parentElement","querySelector","toggleButton","classList","contains","innerHTML","favourites","map","p","toggle","PlayFilters","Form","useForm","form","React","useState","genre","setGenre","before","setBefore","after","setAfter","layout","name","onChange","e","genres","g","i","Option","htmlType","beforeYear","afterYear","resetFields","FavouriteButton","addToFavourites","PlayMatches","handleHeaderClick","target","handleViewClick","plays","length","likelyDate","PlayList","filters","PlayOverview","handleFavouritesClick","handleSelectChange","setPlayFilter","currentTab","acts","playData","scenes","currentAct","characters","push","uniq","currentScene","speeches","s","speaker","a","c","placeholder","setSearchText","synopsis","PlayDataTabBar","handleOnClick","setCurrentTab","getClassName","t","tabs","PlayDataView","wiki","gutenberg","shakespeareOrg","desc","persona","player","stageDirection","filter","currentCharacter","lines","l","searchWords","searchText","textToHighlight","PlayData","PlayDetailApp","state","filename","this","foundPlayData","savedPlayData","find","url","fetch","response","json","data","playText","setState","savePlayData","error","foundAct","foundScene","text","tab","Component","About","isOpen","modalIsOpen","contentLabel","toggleModal","User","user","details","membership","picture","firstname","lastname","city","country","date_joined","src","thumbnail","alt","App","currentPlay","filteredPlays","aboutIsOpen","userIsOpen","orderType","reset","cloneDeep","toLowerCase","includes","sort","b","aTitle","bTitle","Number","favouritesCopy","index","findIndex","splice","path","exact","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","playDataCopy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eafe75a7.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./css/Header.css\";\n\nconst Header = (props) => {\n    const handleAboutClick = () => {\n        props.toggleAbout();\n    }\n    \n    const handleUserClick = () => {\n        props.toggleUser();\n    }\n    \n    return (\n        <div className=\"header\">\n            <Link to=\"/home\"><span>Play Browser</span></Link>\n            <a href=\"https://comp4513-assign2.herokuapp.com/logout\"><button>Logout</button></a>\n            <button onClick={handleAboutClick}>About</button>\n            <button onClick={handleUserClick}>Profile</button>\n        </div>\n    );\n};\n\nexport default Header","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./css/Home.css\";\nimport { Form, Button, Space, Typography, Input } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nconst Home = (props) => {\n    const handleMatchingClick = () => {\n        const title = document.getElementById(\"title\").value;\n        props.setFilteredPlays({\"title\": title}, \"title\");\n    }\n    \n    const handleAllClick = () => {\n        props.setFilteredPlays({}, \"title\");\n    }\n    \n    return (\n        <div className=\"home\">\n            <article className=\"article\">\n                <Title level={1}>Play Browser</Title> \n                <Form>\n                    <Form.Item label=\"Search Plays\">\n                        <Input id=\"title\" type=\"text\"/>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Space>\n                            <Link to=\"/play-list\"><Button type=\"primary\" icon={<SearchOutlined />} onClick={handleMatchingClick}>Search Plays</Button></Link>\n                            <Link to=\"/play-list\"><Button onClick={handleAllClick}>Show All Plays</Button></Link>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </article>\n            <p>Phantom of the Opera at Istana Budaya, Kuala Lumpur. World Tour 2019.</p>\n        </div>\n    );\n};\n\nexport default Home","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./css/FavouritesItem.css\";\n\nconst FavouritesItem = (props) => {\n    const handleOnClick = () => {\n        props.removeFromFavourites(props.play);\n    }\n    \n    const handleViewClick = (play) => {\n        console.log(play);\n        props.setCurrentPlay(play);\n    }\n    \n    return (\n        <div className=\"favourites-item\">\n            <Link to=\"/play-detail\"><span onClick={() => {handleViewClick(props.play)}}>{props.play.title}</span></Link>\n            <button onClick={handleOnClick}>Remove</button>\n        </div>\n    );\n};\n\nexport default FavouritesItem","import React from \"react\";\nimport FavouritesItem from \"./FavouritesItem.js\";\nimport \"./css/FavouritesList.css\";\n\nconst FavouritesList = (props) => {\n    const handleToggleClick = () => {\n        //toggle favourites visibility\n        let parentElement = document.querySelector(\".favourites-list\").parentElement; \n        parentElement.classList.toggle(\"hide-favourites\");\n        toggleArrowSymbol();\n    }\n    \n    const toggleArrowSymbol = () => {\n        //get appropriate arrow symbol\n        let parentElement = document.querySelector(\".favourites-list\").parentElement; \n        let toggleButton = document.getElementById(\"toggle-button\");\n        \n        if (parentElement.classList.contains(\"hide-favourites\")) {toggleButton.innerHTML = \"▶\"}\n        else {toggleButton.innerHTML = \"◀\"}\n    }\n    \n    if (props.favourites) {\n        return (\n            <div className=\"favourites-list\">\n                <h1>Favourites</h1>\n                <ul>\n                {props.favourites.map((p) => \n                    <li key={p.id}>\n                        <FavouritesItem play={p} \n                                        removeFromFavourites={props.removeFromFavourites} \n                                        setCurrentPlay={props.setCurrentPlay}/>\n                    </li>\n                )}\n                </ul>\n                <button id=\"toggle-button\" onClick={handleToggleClick}>◀</button>\n            </div>\n        );\n    }\n    else {\n        return null;\n    }\n};\n\nexport default FavouritesList","import React from \"react\";\nimport { Form, Input, Button, Space, Select, Switch, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst PlayFilters = (props) => {\n    const [form] = Form.useForm();\n    const [genre, setGenre] = React.useState(\"\");\n    const [before, setBefore] = React.useState(false);\n    const [after, setAfter] = React.useState(false);\n\n    const handleFilterClick = () => {\n        // get values from input elements\n        // changing these to use state breaks things that i don't want to deal with\n        const title = document.getElementById(\"title\").value; \n        const beforeYear = document.getElementById(\"beforeYear\").value;\n        const afterYear = document.getElementById(\"afterYear\").value;\n\n        //filter plays with input values\n        props.setFilteredPlays({\"title\": title,\n                                \"before\": before,\n                                \"beforeYear\": beforeYear,\n                                \"after\": after,\n                                \"afterYear\": afterYear,\n                                \"genre\": genre\n                               }, null, true);\n    }\n    \n    const handleClearClick = () => {\n        //set input values to initial values\n        form.resetFields();\n        \n        //remove filters from plays\n        props.setFilteredPlays({}, null, true);\n    }\n    \n    \n    return (\n        <div className=\"play-filters\">\n            <Title level={2}>Play Filters</Title>\n            <Form layout=\"vertical\" form={form}>\n                <Form.Item label=\"Title\" name=\"title\">\n                    <Input id=\"title\" type=\"text\"/>\n                </Form.Item>\n                <Title level={3}>Year</Title>\n                <Form.Item label=\"Before\" name=\"before\">\n                    <Space>\n                    <Switch type=\"checkbox\" onChange={e => setBefore(e)}/>\n                    <Input id=\"beforeYear\" type=\"text\"/>\n                    </Space>\n                </Form.Item>\n                <Form.Item label=\"After\" name=\"after\">\n                    <Space>\n                        <Switch type=\"checkbox\" onChange={e => setAfter(e)}/>\n                        <Input id=\"afterYear\" type=\"text\"/>\n                    </Space>\n                </Form.Item>\n                <Form.Item label=\"Genre\" name=\"genre\">\n                    <Select onChange={e => setGenre(e)}>\n                        {props.genres.map((g, i) => \n                            <Select.Option key={i} value={g}>{g}</Select.Option>                          \n                        )}\n                    </Select>\n                </Form.Item>\n                <Form.Item>\n                    <Space>\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={handleFilterClick}>Filter</Button>\n                        <Button type=\"reset\" onClick={handleClearClick}>Clear</Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default PlayFilters","import React from \"react\";\n\nconst FavouriteButton = (props) => {\n    const handleOnClick = () => {\n        props.addToFavourites(props.play);\n    }\n    \n    return (\n        <button onClick={handleOnClick}>♥</button>\n    );\n};\n\nexport default FavouriteButton","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport FavouriteButton from \"./FavouriteButton.js\";\nimport \"./css/PlayMatches.css\";\n\nconst PlayMatches = (props) => {\n    const handleHeaderClick = (e) => {\n        //sort plays by selected sort type\n        props.setFilteredPlays({}, e.target.title, false);\n    }\n    \n    const handleViewClick = (play) => {\n        props.setCurrentPlay(play);\n    }\n    \n    if (props.plays && props.plays.length > 0) {\n        return (\n            <div className=\"play-matches\">\n                <h1>List/Matches</h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <th title=\"title\" onClick={handleHeaderClick}>Title</th>\n                            <th title=\"year\" onClick={handleHeaderClick}>Year</th>  \n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                </table>\n                <hr/>\n                <div className=\"table-body\">\n                    <table>\n                        <tbody>\n                        {props.plays.map((p) => \n                            <tr key={p.id}>\n                                <td onClick={() => {handleViewClick(p)}}><Link to=\"/play-detail\">{p.title}</Link></td>\n                                <td>{p.likelyDate}</td>\n                                <td><FavouriteButton play={p} addToFavourites={props.addToFavourites}/></td>\n                                <td><Link to=\"/play-detail\"><button onClick={() => {handleViewClick(p)}}>View</button></Link></td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n                <hr/>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"play-matches\">\n                <h1>List/Matches</h1>\n                <p>No plays found!</p>\n            </div>\n        )\n    }\n};\n\nexport default PlayMatches","import React from \"react\";\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayFilters from \"./PlayFilters.js\";\nimport PlayMatches from \"./PlayMatches.js\";\nimport \"./css/PlayList.css\";\n\nconst PlayList = (props) => {\n    return (\n        <div className=\"play-list\">\n                <FavouritesList favourites={props.favourites} \n                                removeFromFavourites={props.removeFromFavourites} \n                                setCurrentPlay={props.setCurrentPlay}/>\n                <PlayFilters filters={props.filters} \n                             setFilteredPlays={props.setFilteredPlays} \n                             genres={props.genres}/>\n                <PlayMatches plays={props.plays} \n                             setFilteredPlays={props.setFilteredPlays} \n                             addToFavourites={props.addToFavourites} \n                             setCurrentPlay={props.setCurrentPlay}/>\n\n        </div>\n//        <CSSTransitionGroup transitionName=\"favourites\" \n//                            transitionAppear={true} \n//                            transitionAppearTimeout={500}\n//                            transitionEnterTimeout={500} \n//                            transitionLeaveTimeout={500}>\n//        </CSSTransitionGroup>\n    );\n};\n\nexport default PlayList","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {uniq} from 'lodash';\nimport \"./css/PlayOverview.css\";\n\nconst PlayOverview = (props) => {\n    const handleFavouritesClick = () => {\n        props.addToFavourites(props.play);\n    }\n    \n    const handleSelectChange = (e) => {\n        const {name, value} = e.target;\n        props.setPlayFilter(name, value);\n    }\n    \n    const handleTextChange = (e) => {\n        props.setSearchText(e.target.value);\n    }\n    \n    //if current tab is text, deisplay filter options\n    if (props.currentTab === \"Text\") {\n        const acts = props.playData.acts;\n        const scenes = props.currentAct.scenes;\n        const characters = [\"All Players\"]; //add all players to list of characters\n        characters.push(...uniq(props.currentScene.speeches.map((s) => s.speaker)));\n        \n        return (\n            <div className=\"play-overview\">\n                <h1>{props.play.title}</h1>\n                <select name=\"act\" onChange={handleSelectChange}>{acts.map((a) => \n                    <option key={a.name} value={a.name}>{a.name}</option>)}\n                </select>\n                <select name=\"scene\" onChange={handleSelectChange}>{scenes.map((s) => \n                    <option key={s.name} value={s.name}>{s.name}</option>)}\n                </select>\n                <fieldset>\n                    <select name=\"character\" onChange={handleSelectChange}>{characters.map((c) => \n                        <option key={c} value={c}>{c}</option>)}\n                    </select>      \n                    <input type=\"text\" placeholder=\"Enter a search term\" onChange={handleTextChange}/>\n                </fieldset>\n                <Link to=\"/play-list\"><button>Close</button></Link>\n                <button onClick={handleFavouritesClick}>♥</button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"play-overview\">\n                <h1>{props.play.title}</h1>\n                <p>{props.play.synopsis}</p>\n                <Link to=\"/play-list\"><button>Close</button></Link>\n                <button onClick={handleFavouritesClick}>♥</button>\n            </div>\n        );\n    }\n};\n\nexport default PlayOverview","import React from \"react\";\nimport \"./css/PlayDataTabBar.css\";\n\nconst PlayDataTabBar = (props) => {\n    const handleOnClick = (e) => {\n        if (e.target.title !== props.currentTab) {\n            //toggle active tabs\n            e.target.classList.toggle(\"active\");\n            props.setCurrentTab(e.target.title);\n        }\n    }\n    \n    const getClassName = (t) => {\n        //set initial active tab\n        return (t === props.currentTab ? \"active\" : \"\");\n    }\n    \n    return (\n        <div className=\"tab-bar\">\n            {props.tabs.map((t) => \n                <button className={getClassName(t)} key={t} title={t} onClick={handleOnClick}>{t}</button>\n            )}\n        </div>\n    );\n};\n\nexport default PlayDataTabBar","import React from \"react\";\nimport Highlighter from \"react-highlight-words\";\nimport \"./css/PlayDataView.css\";\n\nconst PlayDataView = (props) => {\n    const highlightText = (text) => {\n        //replace found search text, with text wrapped in strong element\n        const searchText = props.searchText;\n        return (text.replace(searchText, \"<strong>\" + searchText + \"</strong>\"));\n    }\n    \n    //display data according to current tab\n    if (props.currentTab === \"Details\") {\n        return (\n            <div className=\"data-view\">\n                <p><strong>Likely date of composition:</strong> {props.play.likelyDate}</p>\n                <p><strong>Genre:</strong> {props.play.genre}</p>\n                <p><strong>Wiki Link:</strong> <a href={props.play.wiki}>{props.play.wiki}</a></p>\n                <p><strong>Gutenberg:</strong> <a href={props.play.gutenberg}>{props.play.gutenberg}</a></p>\n                <p><strong>Shakespeare.org Link:</strong> <a href={props.play.shakespeareOrg}>{props.play.shakespeareOrg}</a></p>\n                <p><strong>Description:</strong></p>\n                <p>{props.play.desc}</p>\n            </div>\n        );\n    }\n    else if (props.playData === null || props.currentAct === null) {\n        return (\n            <div className=\"data-view\"></div>\n        );\n    }\n    else if (props.currentTab === \"Characters\") {\n        return (\n            <div className=\"data-view\">\n                {props.playData.persona.map((p) =>\n                    <p key={p.player}><strong>{p.player}</strong> - {p.desc ? p.desc : \"No description\"}</p>\n                )}\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"data-view\">\n                <h2>{props.playData.title}</h2>\n                <article id=\"actHere\">\n                    <h3>{props.currentAct.name}</h3>\n                    <div id=\"sceneHere\">\n                        <h4>{props.currentScene.name}</h4>\n                        <p>{props.currentScene.title}</p>\n                        <p>{props.currentScene.stageDirection}</p>\n                        {props.currentScene.speeches.filter((s) => \n                            //if 'all players' is selected return all speeches\n                            //else return speeches based on current character\n                            props.currentCharacter === \"All Players\" ? true : props.currentCharacter === s.speaker\n                        ).map((s, i) => \n                            <div key={i}>\n                                <p className=\"speaker\"><strong>{s.speaker}</strong></p>\n                                {s.lines.map((l, i) => \n                                    <p className=\"line\" key={i}>\n                                         <Highlighter searchWords={[props.searchText]} textToHighlight={l}/>\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                </article>\n            </div>\n        );\n    }\n};\n\nexport default PlayDataView","import React from \"react\";\nimport PlayDataTabBar from \"./PlayDataTabBar.js\";\nimport PlayDataView from \"./PlayDataView.js\";\n\nconst PlayData = (props) => {\n    return (\n        <div className=\"container\">\n            <PlayDataTabBar tabs={props.tabs} \n                            currentTab={props.currentTab} \n                            setCurrentTab={props.setCurrentTab}/>\n            <hr/>\n            <PlayDataView currentTab={props.currentTab} \n                          play={props.play} \n                          playData={props.playData}\n                          currentAct={props.currentAct}\n                          currentScene={props.currentScene}\n                          currentCharacter={props.currentCharacter}\n                          searchText={props.searchText}/>\n            <hr/>\n        </div>\n    );\n}\n\nexport default PlayData","import React from \"react\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayOverview from \"./PlayOverview.js\";\nimport PlayData from \"./PlayData.js\";\nimport \"./css/PlayDetailApp.css\";\n\nclass PlayDetailApp extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        //initialize available tabs\n        const tabs = [\"Details\", \"Characters\", \"Text\"];\n        \n        //initialize state values\n        this.state = {currentTab: tabs[0],\n                      tabs: props.play.filename ? tabs : [tabs[0]],\n                      playData: [],\n                      currentAct: null,\n                      currentScene: null,\n                      currentCharacter: \"All Players\",\n                      searchText: \"\"};\n    }\n                            \n    async componentDidMount() {\n        //only get data if filename is not null\n        if (this.props.play.filename) {\n            //find saved data with play id\n            const foundPlayData = this.props.savedPlayData.find((p) => p.id === this.props.play.id);\n            \n            //if not saved data is found, fetch\n            if (!foundPlayData) {\n                try {\n                    const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" + this.props.play.id;\n                    const response = await fetch(url);\n                    const data = await response.json();\n                    const playText = data[0].playText;\n                    this.setState({playData: playText});\n                    //console.log(playText);\n                    \n                    //set current act and scene with first in arrays\n                    this.setState({currentAct: playText.acts[0]});\n                    this.setState({currentScene: playText.acts[0].scenes[0]});\n                    \n                    //save play data\n                    this.props.savePlayData(this.props.play, playText);\n                } \n                catch {\n                    console.error(\"fetch error\");\n                }\n            }\n            else {\n                //if saved play data is found, set state values\n                this.setState({playData: foundPlayData.data});\n                this.setState({currentAct: foundPlayData.data.acts[0]});\n                this.setState({currentScene: foundPlayData.data.acts[0].scenes[0]});\n            }\n        }\n    }\n    \n    render() {\n        const setCurrentTab = (tab) => {\n            this.setState({currentTab: tab});\n        }\n        \n        const setPlayFilter = (name, value) => {\n            if (name === \"act\") {\n                //find act from play data and set first scene\n                const foundAct = this.state.playData.acts.find((a) => a.name === value);\n                this.setState({currentAct: foundAct});\n                this.setState({currentScene: foundAct.scenes[0]});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"scene\") {\n                //find scene from current act\n                const foundScene = this.state.currentAct.scenes.find((s) => s.name === value);\n                this.setState({currentScene: foundScene});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"character\") {\n                //set current character\n                this.setState({currentCharacter: value});\n            }\n        }\n        \n        const setSearchText = (text) => {\n            this.setState({searchText: text});\n        }\n        \n        return (\n            <div className=\"play-detail hide-favourites\">\n                <FavouritesList favourites={this.props.favourites} \n                                removeFromFavourites={this.props.removeFromFavourites}/>\n                <PlayOverview currentTab={this.state.currentTab} \n                              play={this.props.play} \n                              playData={this.state.playData} \n                              currentAct={this.state.currentAct} \n                              currentScene={this.state.currentScene} \n                              addToFavourites={this.props.addToFavourites}\n                              setPlayFilter={setPlayFilter}\n                              setSearchText={setSearchText}/>\n                <PlayData currentTab={this.state.currentTab} \n                          tabs={this.state.tabs} \n                          play={this.props.play} \n                          playData={this.state.playData} \n                          currentAct={this.state.currentAct}\n                          currentScene={this.state.currentScene}\n                          currentCharacter={this.state.currentCharacter}\n                          searchText={this.state.searchText}\n                          setCurrentTab={setCurrentTab}/>\n            </div>\n        );\n    }\n};\n\nexport default PlayDetailApp","import React from \"react\";\nimport Modal from 'react-modal';\nimport \"./css/About.css\";\n\nconst About = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    return (\n        <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"about\">\n            <h1>About</h1>\n            <p className=\"subtitle\">Group Members</p>\n            <p>Brian Atuh</p>\n            <p className=\"subtitle\">GitHub Link</p>\n            <p><a href=\"https://github.com/batuh836/comp4513_assignment1\">Comp4513_Assignment1</a></p>\n            <button onClick={handleOnClick}>Close</button>\n        </Modal>\n    );\n};\n\nexport default About","import React from \"react\";\nimport Modal from 'react-modal';\nimport \"./css/User.css\";\n\nconst User = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    if (props.user) {\n        const details = props.user.details;\n        const membership = props.user.membership;\n        const picture = props.user.picture;\n        return (\n            <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"user\">\n                <h1>Profile</h1>\n                <span>Name: {details.firstname} {details.lastname}</span><br/>\n                <span>Location: {details.city}, {details.country}</span><br/>\n                <span>Joined: {membership.date_joined}</span><br/>\n                <img src={picture.thumbnail} alt=\"picture\"/><br/>\n                <button onClick={handleOnClick}>Close</button>\n            </Modal>\n        );\n    }\n    else {\n        return null;\n    }\n};\n\nexport default User","import React from \"react\";\nimport './App.css';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport {Route} from 'react-router-dom';\nimport {cloneDeep, uniq} from 'lodash';\nimport Header from \"./components/Header.js\";\nimport Home from \"./components/Home.js\";\nimport PlayList from \"./components/PlayList.js\";\nimport PlayDetailApp from \"./components/PlayDetailApp.js\";\nimport About from \"./components/About.js\";\nimport User from \"./components/User.js\";\nimport 'antd/dist/antd.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        //set states to initial values\n        this.state = {user: null,\n                      plays: [],\n                      genres: [],\n                      currentPlay: null,\n                      filteredPlays: [],\n                      favourites: [],\n                      savedPlayData: [],\n                      aboutIsOpen: false,\n                      userIsOpen: false};\n    }\n                            \n    async componentDidMount() {\n        if (!this.state.user) {\n            try {\n                const url = \"https://comp4513-assign2.herokuapp.com/user\";\n                const response = await fetch(url);\n                const data = await response.json();\n                this.setState({user: data});\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n\n        if (!this.state.plays.length) {\n            try {\n                const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\n                const response = await fetch(url);\n                const data = await response.json();\n                \n                this.setState({plays: data});\n                this.setState({filteredPlays: data});\n                \n                //add unique genres to state\n                var genres = [\"\"];\n                genres.push(...uniq(data.map((p) => p.genre)));\n                this.setState({genres: genres});\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n    }\n    \n    render() {\n        //methods\n        const setCurrentPlay = (play) => {\n            this.setState({currentPlay: play});\n        }\n        \n        const toggleAbout = () => {\n            if (this.state.aboutIsOpen) {\n                this.setState({aboutIsOpen: false});\n            }\n            else {\n                this.setState({aboutIsOpen: true});\n            }\n        }\n        \n        const toggleUser = () => {\n            if (this.state.userIsOpen) {\n                this.setState({userIsOpen: false});\n            }\n            else {\n                this.setState({userIsOpen: true});\n            }\n        }\n        \n        const setFilteredPlays = (filters, orderType, reset) => {\n            var filteredPlays = reset ? cloneDeep(this.state.plays) : cloneDeep(this.state.filteredPlays); \n            \n            //filter by title\n            if (filters.title) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.title.toLowerCase().includes(filters.title.toLowerCase()));\n            }\n            \n            //filter by beforeYear, if enabled\n            if (filters.before && filters.beforeYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate < filters.beforeYear);\n            }\n            \n            //filter by afterYear, if enabled\n            if (filters.after && filters.afterYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate > filters.afterYear);\n            }\n            \n            //filter by genre\n            if (filters.genre) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.genre === filters.genre);\n            }\n            \n            //order filtered plays\n            if (orderType) {\n                if (orderType === \"title\") {\n                    filteredPlays = filteredPlays.sort((a,b) => {\n                                        let aTitle = a.title.toLowerCase();\n                                        let bTitle = b.title.toLowerCase(); \n                                        if (aTitle > bTitle) {return 1}\n                                        else if (aTitle < bTitle) {return -1}\n                                        else {return 0}\n                                    });\n                }\n                else if (orderType === \"year\") {\n                    filteredPlays = filteredPlays.sort((a,b) => \n                                        Number(a.likelyDate) - Number(b.likelyDate));\n                }\n            }\n            \n//            console.log(filters);\n//            console.log(filteredPlays);\n            this.setState({filteredPlays: filteredPlays});\n        }\n        \n        const addToFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //prevent duplicates from being added\n            if (!favouritesCopy.find((p) => p.id === play.id)) {\n                favouritesCopy.push(play);\n            }\n            \n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const removeFromFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //get index of play and remove it\n            const index = favouritesCopy.findIndex((p) => p.id === play.id);\n            favouritesCopy.splice(index, 1);\n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const savePlayData = (play, data) => {\n            const playDataCopy = cloneDeep(this.state.savedPlayData);\n            \n            //save play data with corresponding id\n            playDataCopy.push({id: play.id, data: data});\n            this.setState({savedPlayData: playDataCopy});\n        }\n        \n        return (\n            <div className=\"app\">\n                <Route path=\"/home\" exact>\n                    <CSSTransitionGroup transitionName=\"landing\" \n                                        transitionAppear={true} \n                                        transitionAppearTimeout={500}\n                                        transitionEnterTimeout={500} \n                                        transitionLeaveTimeout={500}>\n                        <Home setFilteredPlays={setFilteredPlays}/>\n                    </CSSTransitionGroup>\n                </Route>\n                <Route path=\"/play-list\" exact>\n                    <Header toggleAbout={toggleAbout} toggleUser={toggleUser}/>\n                    <PlayList plays={this.state.filteredPlays}\n                              genres={this.state.genres}\n                              favourites={this.state.favourites}\n                              filters={this.state.filters}\n                              setFilteredPlays={setFilteredPlays} \n                              addToFavourites={addToFavourites}\n                              removeFromFavourites={removeFromFavourites}\n                              setCurrentPlay={setCurrentPlay}/>\n                </Route>\n                <Route path=\"/play-detail\" exact>\n                    <Header toggleAbout={toggleAbout} toggleUser={toggleUser}/>\n                    <PlayDetailApp play={this.state.currentPlay}\n                                   savedPlayData={this.state.savedPlayData}\n                                   favourites={this.state.favourites}\n                                   addToFavourites={addToFavourites}\n                                   removeFromFavourites={removeFromFavourites}\n                                   savePlayData={savePlayData}/>\n                </Route>\n                <About modalIsOpen={this.state.aboutIsOpen} toggleModal={toggleAbout}/>\n                <User modalIsOpen={this.state.userIsOpen} toggleModal={toggleUser} user={this.state.user}/>\n            </div>\n        );                \n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter><App/></BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n//ReactDOMServer.renderToString(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n//ReactDOMServer.renderToStaticMarkup(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}