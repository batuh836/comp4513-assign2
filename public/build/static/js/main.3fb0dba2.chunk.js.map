{"version":3,"sources":["components/Home.js","components/HeaderContent.js","components/FavouritesItem.js","components/FavouritesList.js","components/PlayFilters.js","components/FavouriteButton.js","components/PlayMatches.js","components/PlayList.js","components/PlayOverview.js","components/PlayDetails.js","components/PlayCharacters.js","components/PlayScript.js","components/PlayData.js","components/PlayDetailApp.js","components/About.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["Title","Typography","Home","props","className","level","Item","label","id","type","to","icon","SearchOutlined","onClick","title","document","getElementById","value","setFilteredPlays","HeaderContent","justify","style","fontSize","fontWeight","toggleAbout","toggleUser","href","FavouritesItem","padding","alignItems","play","console","log","setCurrentPlay","textTransform","removeFromFavourites","CloseOutlined","Sider","Layout","Header","Footer","Content","FavouritesList","collapsible","defaultCollapsed","collapsedWidth","theme","width","paddingTop","favourites","map","p","PlayFilters","Form","useForm","form","React","useState","genre","setGenre","before","setBefore","after","setAfter","span","name","onChange","e","genres","g","i","Option","htmlType","beforeYear","afterYear","resetFields","FavouriteButton","addToFavourites","HeartFilled","PlayMatches","dataSource","plays","key","year","likelyDate","actions","columns","dataIndex","sorter","a","b","aTitle","children","toLowerCase","bTitle","length","paddingLeft","pagination","scroll","x","y","PlayList","height","filters","PlayOverview","currentTab","acts","playData","scenes","currentAct","characters","push","uniq","currentScene","speeches","s","speaker","setPlayFilter","c","placeholder","setSearchText","target","synopsis","PlayDetails","textAlign","backgroundColor","wiki","gutenberg","shakespeareOrg","desc","PlayCharacters","persona","player","PlayScript","fontFamily","stageDirection","filter","currentCharacter","lines","l","searchWords","searchText","textToHighlight","highlightStyle","TabPane","Tabs","PlayData","defaultActiveKey","setCurrentTab","tab","maxHeight","overflow","disabled","PlayDetailApp","tabs","state","filename","this","foundPlayData","savedPlayData","find","url","fetch","response","json","data","playText","setState","savePlayData","error","foundAct","foundScene","text","index","Component","About","isOpen","modalIsOpen","contentLabel","toggleModal","User","user","details","membership","picture","src","thumbnail","alt","flex","firstname","lastname","offset","city","country","date_joined","marginTop","App","currentPlay","filteredPlays","aboutIsOpen","userIsOpen","orderType","reset","cloneDeep","includes","sort","Number","favouritesCopy","findIndex","splice","path","exact","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","playDataCopy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3fb0dba2.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./css/Home.css\";\nimport { Form, Button, Space, Typography, Input } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nconst Home = (props) => {\n    const handleMatchingClick = () => {\n        const title = document.getElementById(\"title\").value;\n        props.setFilteredPlays({\"title\": title}, \"title\");\n    }\n    \n    const handleAllClick = () => {\n        props.setFilteredPlays({}, \"title\");\n    }\n    \n    return (\n        <div className=\"home\">\n            <article className=\"article\">\n                <Title level={1}>Play Browser</Title> \n                <Form>\n                    <Form.Item label=\"Search Plays\">\n                        <Input id=\"title\" type=\"text\"/>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Space>\n                            <Link to=\"/play-list\"><Button type=\"primary\" icon={<SearchOutlined />} onClick={handleMatchingClick}>Search Plays</Button></Link>\n                            <Link to=\"/play-list\"><Button onClick={handleAllClick}>Show All Plays</Button></Link>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </article>\n            <p>Phantom of the Opera at Istana Budaya, Kuala Lumpur. World Tour 2019.</p>\n        </div>\n    );\n};\n\nexport default Home","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport { Row, Col, Button, Space } from \"antd\";\n\nconst HeaderContent = (props) => {\n    const handleAboutClick = () => {\n        props.toggleAbout();\n    }\n    \n    const handleUserClick = () => {\n        props.toggleUser();\n    }\n    \n    return (\n        <Row justify=\"space-between\">\n            <Col>\n                <Link to=\"/home\" style={{fontSize: \"2rem\", fontWeight: \"bold\"}}>Play Browser</Link>\n            </Col>\n            <Col>\n                <Space>\n                    <Button onClick={handleAboutClick}>About</Button>\n                    <Button onClick={handleUserClick}>Profile</Button>\n                    <a href=\"https://comp4513-assign2.herokuapp.com/logout\"><Button type=\"primary\">Logout</Button></a>\n                </Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default HeaderContent","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {Button, Row} from \"antd\";\nimport { CloseOutlined } from '@ant-design/icons';\n\nconst FavouritesItem = (props) => {\n    const handleOnClick = () => {\n        props.removeFromFavourites(props.play);\n    }\n    \n    const handleViewClick = (play) => {\n        console.log(play);\n        props.setCurrentPlay(play);\n    }\n    \n    return (\n        <Row justify=\"space-between\" style={{padding: \"2px 10px\", alignItems: \"center\"}}>\n            <Link to=\"/play-detail\"><span onClick={() => {handleViewClick(props.play)}} style={{textTransform: \"uppercase\"}}>{props.play.title}</span></Link>\n            <Button type=\"primary\" onClick={handleOnClick} icon={<CloseOutlined />}/>\n        </Row>\n    );\n};\n\nexport default FavouritesItem","import React from \"react\";\nimport FavouritesItem from \"./FavouritesItem.js\";\nimport { Typography, Layout } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst { Title } = Typography;\n\nconst FavouritesList = (props) => {\n    return (\n        <Sider collapsible={true} \n                defaultCollapsed={false} \n                collapsedWidth={0} \n                theme=\"light\" \n                width={300} \n                style={{paddingTop: \"20px\"}}>\n            <Title level={2}>Favourites</Title>\n            {props.favourites.map((p) => \n                <FavouritesItem play={p} \n                                    removeFromFavourites={props.removeFromFavourites} \n                                    setCurrentPlay={props.setCurrentPlay}/>\n            )}\n        </Sider>\n    );\n};\n\nexport default FavouritesList","import React from \"react\";\nimport { Form, Input, Button, Space, Select, Switch, Typography, Col } from 'antd';\n\nconst { Title } = Typography;\n\nconst PlayFilters = (props) => {\n    const [form] = Form.useForm();\n    const [genre, setGenre] = React.useState(\"\");\n    const [before, setBefore] = React.useState(false);\n    const [after, setAfter] = React.useState(false);\n\n    const handleFilterClick = () => {\n        // get values from input elements\n        // changing these to use state breaks things that i don't want to deal with\n        const title = document.getElementById(\"title\").value; \n        const beforeYear = document.getElementById(\"beforeYear\").value;\n        const afterYear = document.getElementById(\"afterYear\").value;\n\n        //filter plays with input values\n        props.setFilteredPlays({\"title\": title,\n                                \"before\": before,\n                                \"beforeYear\": beforeYear,\n                                \"after\": after,\n                                \"afterYear\": afterYear,\n                                \"genre\": genre\n                               }, null, true);\n    }\n    \n    const handleClearClick = () => {\n        //set input values to initial values\n        form.resetFields();\n        \n        //remove filters from plays\n        props.setFilteredPlays({}, null, true);\n    }\n    \n    \n    return (\n        <Col span={6} style={{ padding: '0px 20px' }}>\n            <Title level={2}>Play Filters</Title>\n            <Form  form={form}>\n                <Form.Item label=\"Title\" name=\"title\">\n                    <Input id=\"title\" type=\"text\"/>\n                </Form.Item>\n                <Title level={3}>Year</Title>\n                <Form.Item label=\"Before\" name=\"before\">\n                    <Space>\n                    <Switch type=\"checkbox\" onChange={e => setBefore(e)}/>\n                    <Input id=\"beforeYear\" type=\"text\"/>\n                    </Space>\n                </Form.Item>\n                <Form.Item label=\"After\" name=\"after\">\n                    <Space>\n                        <Switch type=\"checkbox\" onChange={e => setAfter(e)}/>\n                        <Input id=\"afterYear\" type=\"text\"/>\n                    </Space>\n                </Form.Item>\n                <Form.Item label=\"Genre\" name=\"genre\">\n                    <Select onChange={e => setGenre(e)}>\n                        {props.genres.map((g, i) => \n                            <Select.Option key={i} value={g}>{g}</Select.Option>                          \n                        )}\n                    </Select>\n                </Form.Item>\n                <Form.Item>\n                    <Space>\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={handleFilterClick}>Filter</Button>\n                        <Button type=\"reset\" onClick={handleClearClick}>Clear</Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        </Col>\n    );\n};\n\nexport default PlayFilters","import React from \"react\";\nimport { Button } from \"antd\";\nimport { HeartFilled } from '@ant-design/icons';\n\nconst FavouriteButton = (props) => {\n    return (\n        <Button type=\"primary\" onClick={e => props.addToFavourites(props.play)} icon={<HeartFilled />}/>\n    );\n};\n\nexport default FavouriteButton","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport FavouriteButton from \"./FavouriteButton.js\";\nimport { Col, Typography, Table, Space, Button } from 'antd';\nimport \"./css/PlayMatches.css\";\n\nconst { Title } = Typography;\n\nconst PlayMatches = (props) => {\n    \n    const titleSort = (a, b) => {\n        // yeah i don't get this either\n        let aTitle = a.title.props.children.toLowerCase();\n        let bTitle = b.title.props.children.toLowerCase(); \n        if (aTitle > bTitle) {return 1}\n        else if (aTitle < bTitle) {return -1}\n        else {return 0}\n    }\n\n    const dataSource = props.plays.map(p => {\n        return {    key: p.id,\n                    title: <Link to=\"/play-detail\" onClick={(e) => props.setCurrentPlay(p)} style={{textTransform:\"uppercase\"}}>{p.title}</Link>,\n                    year: p.likelyDate,\n                    actions: \n                        <Space>\n                            <FavouriteButton play={p} addToFavourites={props.addToFavourites}/>\n                            <Link to=\"/play-detail\"><Button type=\"primary\" onClick={(e) => props.setCurrentPlay(p)}>View</Button></Link>\n                        </Space>\n                }\n    });\n\n    // antdesign has a known issue with the columns not aligning when scrolling\n    // https://github.com/ant-design/ant-design/issues/7603\n    const columns = [\n        {\n            title: \"Title\",\n            dataIndex: \"title\",\n            key: \"title\",\n            sorter: titleSort\n        },\n        {\n            title: \"Year\",\n            dataIndex: \"year\",\n            key: \"year\",\n            sorter: (a, b) => a.year - b.year\n        },\n        {\n            title: \"Actions\",\n            dataIndex: \"actions\",\n            key: \"actions\"\n        }\n    ];\n\n    if (props.plays && props.plays.length > 0) {\n        return (\n            <Col className=\"play-matches\" span={18} style={{ paddingLeft: '40px' }}>\n                <Title level={2}>Play List</Title>\n                <Table columns={columns} pagination={false} dataSource={dataSource} scroll={{x: \"max-content\", y: \"calc(100vh - 220px)\"}}/>\n            </Col>\n        );\n    }\n    else {\n        return (\n            <Col className=\"play-matches\" span={18} style={{ paddingLeft: '40px' }}>\n                <Title level={2}>Play List</Title>\n                <p>No plays found!</p>\n            </Col>\n        )\n    }\n};\n\nexport default PlayMatches","import React from \"react\";\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport HeaderContent from \"./HeaderContent.js\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayFilters from \"./PlayFilters.js\";\nimport PlayMatches from \"./PlayMatches.js\";\nimport { Layout, Row } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// oh god antdesign is not made for three column setups\nconst PlayList = (props) => {\n    return (\n        <Layout style={{height:\"100vh\"}}>\n            <Header>\n                <HeaderContent toggleAbout={props.toggleAbout} toggleUser={props.toggleUser}/>\n            </Header>\n            <Layout>\n                <FavouritesList favourites={props.favourites} \n                                                removeFromFavourites={props.removeFromFavourites} \n                                                setCurrentPlay={props.setCurrentPlay}/>\n                <Content style={{padding: \"20px 40px\"}}>\n                    <Row justify=\"space-between\">\n                            <PlayFilters filters={props.filters} \n                                                                setFilteredPlays={props.setFilteredPlays} \n                                                                genres={props.genres}/>\n                            <PlayMatches plays={props.plays} \n                                    setFilteredPlays={props.setFilteredPlays} \n                                    addToFavourites={props.addToFavourites} \n                                    setCurrentPlay={props.setCurrentPlay}/>\n                    </Row>\n                </Content>\n            </Layout>\n        </Layout>\n//        <CSSTransitionGroup transitionName=\"favourites\" \n//                            transitionAppear={true} \n//                            transitionAppearTimeout={500}\n//                            transitionEnterTimeout={500} \n//                            transitionLeaveTimeout={500}>\n//        </CSSTransitionGroup>\n    );\n};\n\nexport default PlayList","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {uniq} from 'lodash';\nimport { Col, Typography, Button, Form, Input, Select, Space } from 'antd';\nimport FavouriteButton from \"./FavouriteButton\";\nconst { Title } = Typography;\n\nconst PlayOverview = (props) => {\n    //if current tab is text, deisplay filter options\n    if (props.currentTab === \"Text\") {\n        const acts = props.playData.acts;\n        const scenes = props.currentAct.scenes;\n        const characters = [\"All Players\"]; //add all players to list of characters\n        characters.push(...uniq(props.currentScene.speeches.map((s) => s.speaker)));\n        \n        return (\n            <Col className=\"play-overview\" span={6} style={{ padding: '0px 20px' }}>\n                <Title level={2}>{props.play.title}</Title>\n                <Title level={3}>Script Search</Title>\n                <Form>\n                    <Form.Item label=\"Act\" name=\"act\">\n                        <Select name=\"act\" onChange={e => props.setPlayFilter(\"act\", e)}>{acts.map((a) => \n                            <Select.Option key={a.name} value={a.name}>{a.name}</Select.Option>)}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item label=\"Scene\" name=\"scene\">\n                        <Select name=\"scene\" onChange={e => props.setPlayFilter(\"scene\", e)}>{scenes.map((s) => \n                            <Select.Option key={s.name} value={s.name}>{s.name}</Select.Option>)}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item label=\"Character\" name=\"character\">\n                        <Select name=\"character\" onChange={e => props.setPlayFilter(\"character\", e)}>{characters.map((c) => \n                            <Select.Option key={c} value={c}>{c}</Select.Option>)}\n                        </Select>      \n                    </Form.Item>\n                    <Form.Item>\n                        <Input type=\"text\" placeholder=\"Enter a search term\" onChange={e => props.setSearchText(e.target.value)}/>\n                    </Form.Item>\n                </Form>\n                <Space>\n                    <Link to=\"/play-list\"><Button>Close</Button></Link>\n                    <FavouriteButton play={props.play} addToFavourites={props.addToFavourites}/>\n                </Space>\n\n            </Col>\n        );\n    }\n    else {\n        return (\n            <Col className=\"play-overview\" span={6} style={{ padding: '0px 20px' }}>\n                <Title level={2}>{props.play.title}</Title>\n                <p>{props.play.synopsis}</p>\n                <Space>\n                    <Link to=\"/play-list\"><Button>Close</Button></Link>\n                    <FavouriteButton play={props.play} addToFavourites={props.addToFavourites}/>\n                </Space>\n            </Col>\n        );\n    }\n};\n\nexport default PlayOverview","import React from \"react\";\nimport { Row, Col } from 'antd';\n\nconst PlayDetails = (props) => {\n    return (\n        <div style={{textAlign:\"left\", backgroundColor: \"white\", padding:\"10px\"}}>\n            <Row>\n                <Col span={8}><strong>Likely date of composition:</strong></Col>\n                <Col span={16}>{props.play.likelyDate}</Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Genre:</strong></Col>\n                <Col span={16}>{props.play.genre}</Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Wiki Link:</strong></Col>\n                <Col span={16}><a href={props.play.wiki}>{props.play.wiki}</a></Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Gutenberg:</strong></Col>\n                <Col span={16}><a href={props.play.gutenberg}>{props.play.gutenberg}</a></Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Shakespeare.org:</strong></Col>\n                <Col span={16}><a href={props.play.shakespeareOrg}>{props.play.shakespeareOrg}</a></Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Description:</strong></Col>\n                <Col span={16}>{props.play.desc}</Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default PlayDetails","import React from \"react\";\nconst PlayCharacters = (props) => {\n    return (\n        <div style={{textAlign:\"left\", backgroundColor: \"white\", padding:\"10px\"}}>\n            {props.persona.map((p) =>\n                    <p key={p.player}><strong>{p.player}</strong> - {p.desc ? p.desc : \"No description\"}</p>\n                )}\n        </div>\n    );\n}\n\nexport default PlayCharacters","import React from \"react\";\nimport Highlighter from \"react-highlight-words\";\n\nconst PlayScript = (props) => {\n\n    const highlightText = (text) => {\n        //replace found search text, with text wrapped in strong element\n        const searchText = props.searchText;\n        return (text.replace(searchText, \"<strong>\" + searchText + \"</strong>\"));\n    }\n\n    return (\n        <div style={{textAlign:\"left\", backgroundColor: \"white\", padding:\"10px\", fontFamily: \"serif\"}}>\n            <h2>{props.playData.title}</h2>\n                <article id=\"actHere\">\n                    <h3>{props.currentAct.name}</h3>\n                    <div id=\"sceneHere\">\n                        <h4>{props.currentScene.name}</h4>\n                        <p>{props.currentScene.title}</p>\n                        <p>{props.currentScene.stageDirection}</p>\n                        {props.currentScene.speeches.filter((s) => \n                            //if 'all players' is selected return all speeches\n                            //else return speeches based on current character\n                            props.currentCharacter === \"All Players\" ? true : props.currentCharacter === s.speaker\n                        ).map((s, i) => \n                            <div key={i}>\n                                <p className=\"speaker\"><strong>{s.speaker}</strong></p>\n                                {s.lines.map((l, i) => \n                                    <p className=\"line\" key={i}>\n                                         <Highlighter searchWords={[props.searchText]} textToHighlight={l} highlightStyle={{fontWeight: \"bold\"}}/>\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                </article>\n        </div>\n    );\n}\n\nexport default PlayScript","import React from \"react\";\nimport { Row, Col, Tabs } from 'antd';\nimport PlayDetails from \"./PlayDetails.js\";\nimport PlayCharacters from \"./PlayCharacters.js\";\nimport PlayScript from \"./PlayScript.js\";\nconst { TabPane } = Tabs;\n\nconst PlayData = (props) => {\n    return (\n        <Col className=\"container\" span={18} style={{ paddingLeft: '40px' }}>\n            <Tabs defaultActiveKey=\"0\" onChange={e=> props.setCurrentTab(e)}>\n                <TabPane tab=\"Details\" key=\"0\" style={{ maxHeight: \"calc(100vh - 180px)\", overflow: \"scroll\"}}>\n                    <PlayDetails play={props.play}/>\n                </TabPane>\n                {props.playData && props.playData.length == 0 &&\n                    <TabPane tab=\"Characters\" key=\"1\" disabled/>\n                }\n                {props.playData && props.playData.length != 0 &&\n                    <TabPane tab=\"Characters\" key=\"1\" style={{ maxHeight: \"calc(100vh - 180px)\", overflow: \"scroll\"}}>\n                        <PlayCharacters persona={props.playData.persona}/>\n                    </TabPane>\n                }\n                {props.playData && props.playData.length == 0 &&\n                    <TabPane tab=\"Script\" key=\"2\" disabled/>\n                }\n                {props.playData && props.playData.length != 0 &&\n                    <TabPane tab=\"Script\" key=\"2\" style={{ maxHeight: \"calc(100vh - 180px)\", overflow: \"scroll\"}}>\n                        <PlayScript playData={props.playData} \n                                    currentAct={props.currentAct}\n                                    currentScene={props.currentScene}\n                                    currentCharacter={props.currentCharacter}\n                                    searchText={props.searchText}\n                                    />\n                    </TabPane>\n                }\n\n                \n            </Tabs>\n        </Col>\n    );\n}\n\nexport default PlayData","import React from \"react\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayOverview from \"./PlayOverview.js\";\nimport HeaderContent from \"./HeaderContent.js\";\nimport PlayData from \"./PlayData.js\";\nimport { Layout, Row } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass PlayDetailApp extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        //initialize available tabs\n        const tabs = [\"Details\", \"Characters\", \"Text\"];\n        \n        //initialize state values\n        this.state = {currentTab: tabs[0],\n                      tabs: props.play.filename ? tabs : [tabs[0]],\n                      playData: [],\n                      currentAct: null,\n                      currentScene: null,\n                      currentCharacter: \"All Players\",\n                      searchText: \"\"};\n    }\n                            \n    async componentDidMount() {\n        //only get data if filename is not null\n        if (this.props.play.filename) {\n            //find saved data with play id\n            const foundPlayData = this.props.savedPlayData.find((p) => p.id === this.props.play.id);\n            \n            //if not saved data is found, fetch\n            if (!foundPlayData) {\n                try {\n                    const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" + this.props.play.id;\n                    const response = await fetch(url);\n                    const data = await response.json();\n                    const playText = data\n                    //const playText = data[0].playText;\n                    this.setState({playData: playText});\n                    console.log(playText);\n                    \n                    //set current act and scene with first in arrays\n                    this.setState({currentAct: playText.acts[0]});\n                    this.setState({currentScene: playText.acts[0].scenes[0]});\n                    \n                    //save play data\n                    this.props.savePlayData(this.props.play, playText);\n                } \n                catch {\n                    console.error(\"fetch error\");\n                }\n            }\n            else {\n                //if saved play data is found, set state values\n                this.setState({playData: foundPlayData.data});\n                this.setState({currentAct: foundPlayData.data.acts[0]});\n                this.setState({currentScene: foundPlayData.data.acts[0].scenes[0]});\n            }\n        }\n    }\n    \n    render() {\n        const tabs = [\"Details\", \"Characters\", \"Text\"];\n        const setCurrentTab = (index) => {\n            this.setState({currentTab: tabs[index]});\n        }\n        \n        const setPlayFilter = (name, value) => {\n            if (name === \"act\") {\n                //find act from play data and set first scene\n                const foundAct = this.state.playData.acts.find((a) => a.name === value);\n                this.setState({currentAct: foundAct});\n                this.setState({currentScene: foundAct.scenes[0]});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"scene\") {\n                //find scene from current act\n                const foundScene = this.state.currentAct.scenes.find((s) => s.name === value);\n                this.setState({currentScene: foundScene});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"character\") {\n                //set current character\n                this.setState({currentCharacter: value});\n            }\n        }\n        \n        const setSearchText = (text) => {\n            this.setState({searchText: text});\n        }\n        \n        return (\n            <Layout style={{height:\"100vh\"}}>\n                <Header>\n                    <HeaderContent toggleAbout={this.props.toggleAbout} toggleUser={this.props.toggleUser}/>\n                </Header>\n                <Layout>\n                    <FavouritesList favourites={this.props.favourites} \n                                removeFromFavourites={this.props.removeFromFavourites}\n                                setCurrentPlay={this.props.setCurrentPlay}\n                                />\n                    <Content style={{padding: \"20px 40px\"}}>\n                        <Row justify=\"space-between\">\n                            <PlayOverview currentTab={this.state.currentTab} \n                                    play={this.props.play} \n                                    playData={this.state.playData} \n                                    currentAct={this.state.currentAct} \n                                    currentScene={this.state.currentScene} \n                                    addToFavourites={this.props.addToFavourites}\n                                    setPlayFilter={setPlayFilter}\n                                    setSearchText={setSearchText}/>\n                            <PlayData currentTab={this.state.currentTab} \n                                    tabs={this.state.tabs} \n                                    play={this.props.play} \n                                    playData={this.state.playData} \n                                    currentAct={this.state.currentAct}\n                                    currentScene={this.state.currentScene}\n                                    currentCharacter={this.state.currentCharacter}\n                                    searchText={this.state.searchText}\n                                    setCurrentTab={setCurrentTab}/>\n                        </Row>\n                    </Content>\n                </Layout>\n            </Layout>\n        );\n    }\n};\n\nexport default PlayDetailApp","import React from \"react\";\nimport Modal from 'react-modal';\nimport { Typography, Button } from 'antd';\nconst { Title } = Typography;\n\nconst About = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    return (\n        <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"modal\">\n            <Title level={4}>About</Title>\n            <Title level={5}>Group Members</Title>\n            <p>Brian Atuh</p>\n            <p>Olga Koldachenko</p>\n            <Title level={5}>GitHub Link</Title>\n            <p><a href=\"https://github.com/batuh836/comp4513-assign2\">comp4513_assign2</a></p>\n            <Title level={5}>React CSS</Title>\n            <p><a href=\"https://ant.design/\">Ant Design</a></p>\n            <Button type=\"primary\" onClick={handleOnClick}>Close</Button>\n        </Modal>\n    );\n};\n\nexport default About","import React from \"react\";\nimport Modal from 'react-modal';\nimport { Typography, Button, Row, Col, Space } from 'antd';\nconst { Title } = Typography;\n\n\nconst User = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    if (props.user) {\n        const details = props.user.details;\n        const membership = props.user.membership;\n        const picture = props.user.picture;\n        return (\n            <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"modal\">\n            <Title level={4}>Profile</Title>\n            <Row justify=\"space-between\">\n                <Col span={2}>\n                    <img src={picture.thumbnail} alt=\"picture\"/><br/>\n                </Col>\n                <Col flex=\"auto\">\n                    <Title level={5}>{details.firstname} {details.lastname}</Title>\n                </Col>\n            </Row>\n            <Row>\n                <Col offset={2} span={11}>\n                    Location:\n                </Col>\n                <Col span={11}>\n                    {details.city}, {details.country}\n                </Col>\n            </Row>\n            <Row>\n                <Col offset={2} span={11}>\n                    Joined:\n                </Col>\n                <Col span={11}>\n                    {membership.date_joined}\n                </Col>\n            </Row>\n            <Button type=\"primary\" onClick={handleOnClick} style={{marginTop: \"10px\"}}>Close</Button>\n            </Modal>\n        );\n    }\n    else {\n        return null;\n    }\n};\n\nexport default User","import React from \"react\";\nimport './App.css';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport {Route} from 'react-router-dom';\nimport {cloneDeep, uniq} from 'lodash';\n//import Header from \"./components/HeaderContent.js\";\nimport Home from \"./components/Home.js\";\nimport PlayList from \"./components/PlayList.js\";\nimport PlayDetailApp from \"./components/PlayDetailApp.js\";\nimport About from \"./components/About.js\";\nimport User from \"./components/User.js\";\nimport 'antd/dist/antd.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        //set states to initial values\n        this.state = {user: null,\n                      plays: [],\n                      genres: [],\n                      currentPlay: null,\n                      filteredPlays: [],\n                      favourites: [],\n                      savedPlayData: [],\n                      aboutIsOpen: false,\n                      userIsOpen: false};\n    }\n                            \n    async componentDidMount() {\n        if (!this.state.user) {\n            try {\n                const url = \"https://comp4513-assign2.herokuapp.com/user\";\n                const response = await fetch(url);\n                const data = await response.json();\n                this.setState({user: data});\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n\n        if (!this.state.plays.length) {\n            try {\n                const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\n                const response = await fetch(url);\n                const data = await response.json();\n                \n                this.setState({plays: data});\n                this.setState({filteredPlays: data});\n                \n                //add unique genres to state\n                var genres = [\"\"];\n                genres.push(...uniq(data.map((p) => p.genre)));\n                this.setState({genres: genres});\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n    }\n    \n    render() {\n        //methods\n        const setCurrentPlay = (play) => {\n            this.setState({currentPlay: play});\n        }\n        \n        const toggleAbout = () => {\n            if (this.state.aboutIsOpen) {\n                this.setState({aboutIsOpen: false});\n            }\n            else {\n                this.setState({aboutIsOpen: true});\n            }\n        }\n        \n        const toggleUser = () => {\n            if (this.state.userIsOpen) {\n                this.setState({userIsOpen: false});\n            }\n            else {\n                this.setState({userIsOpen: true});\n            }\n        }\n        \n        const setFilteredPlays = (filters, orderType, reset) => {\n            var filteredPlays = reset ? cloneDeep(this.state.plays) : cloneDeep(this.state.filteredPlays); \n            \n            //filter by title\n            if (filters.title) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.title.toLowerCase().includes(filters.title.toLowerCase()));\n            }\n            \n            //filter by beforeYear, if enabled\n            if (filters.before && filters.beforeYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate < filters.beforeYear);\n            }\n            \n            //filter by afterYear, if enabled\n            if (filters.after && filters.afterYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate > filters.afterYear);\n            }\n            \n            //filter by genre\n            if (filters.genre) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.genre === filters.genre);\n            }\n            \n            //order filtered plays\n            if (orderType) {\n                if (orderType === \"title\") {\n                    filteredPlays = filteredPlays.sort((a,b) => {\n                                        let aTitle = a.title.toLowerCase();\n                                        let bTitle = b.title.toLowerCase(); \n                                        if (aTitle > bTitle) {return 1}\n                                        else if (aTitle < bTitle) {return -1}\n                                        else {return 0}\n                                    });\n                }\n                else if (orderType === \"year\") {\n                    filteredPlays = filteredPlays.sort((a,b) => \n                                        Number(a.likelyDate) - Number(b.likelyDate));\n                }\n            }\n            \n//            console.log(filters);\n//            console.log(filteredPlays);\n            this.setState({filteredPlays: filteredPlays});\n        }\n        \n        const addToFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //prevent duplicates from being added\n            if (!favouritesCopy.find((p) => p.id === play.id)) {\n                favouritesCopy.push(play);\n            }\n            \n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const removeFromFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //get index of play and remove it\n            const index = favouritesCopy.findIndex((p) => p.id === play.id);\n            favouritesCopy.splice(index, 1);\n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const savePlayData = (play, data) => {\n            const playDataCopy = cloneDeep(this.state.savedPlayData);\n            \n            //save play data with corresponding id\n            playDataCopy.push({id: play.id, data: data});\n            this.setState({savedPlayData: playDataCopy});\n        }\n        \n        return (\n            <div className=\"app\">\n                <Route path=\"/home\" exact>\n                    <CSSTransitionGroup transitionName=\"landing\" \n                                        transitionAppear={true} \n                                        transitionAppearTimeout={500}\n                                        transitionEnterTimeout={500} \n                                        transitionLeaveTimeout={500}>\n                        <Home setFilteredPlays={setFilteredPlays}/>\n                    </CSSTransitionGroup>\n                </Route>\n                <Route path=\"/play-list\" exact>\n                    <PlayList plays={this.state.filteredPlays}\n                              genres={this.state.genres}\n                              favourites={this.state.favourites}\n                              filters={this.state.filters}\n                              setFilteredPlays={setFilteredPlays} \n                              addToFavourites={addToFavourites}\n                              removeFromFavourites={removeFromFavourites}\n                              setCurrentPlay={setCurrentPlay}\n                              toggleAbout={toggleAbout}\n                              toggleUser={toggleUser}\n                              />\n                </Route>\n                <Route path=\"/play-detail\" exact>\n                \n                    <PlayDetailApp play={this.state.currentPlay}\n                            savedPlayData={this.state.savedPlayData}\n                            favourites={this.state.favourites}\n                            addToFavourites={addToFavourites}\n                            removeFromFavourites={removeFromFavourites}\n                            savePlayData={savePlayData}\n                            toggleAbout={toggleAbout}\n                            toggleUser={toggleUser}\n                            setCurrentPlay={setCurrentPlay}\n                            />\n                </Route>\n                <About modalIsOpen={this.state.aboutIsOpen} toggleModal={toggleAbout}/>\n                <User modalIsOpen={this.state.userIsOpen} toggleModal={toggleUser} user={this.state.user}/>\n            </div>\n        );                \n    }\n}\n\nexport default App;\n\n//<Header toggleAbout={toggleAbout} toggleUser={toggleUser}/>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter><App/></BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n//ReactDOMServer.renderToString(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n//ReactDOMServer.renderToStaticMarkup(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}