{"version":3,"sources":["components/Home.js","components/HeaderContent.js","components/FavouritesItem.js","components/FavouritesList.js","components/PlayFilters.js","components/FavouriteButton.js","components/PlayMatches.js","components/PlayList.js","components/PlayOverview.js","components/PlayDetails.js","components/PlayCharacters.js","components/PlayScript.js","components/PlayData.js","components/PlayDetailApp.js","components/About.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["Title","Typography","Home","props","className","level","Item","label","id","type","to","icon","SearchOutlined","onClick","title","document","getElementById","value","setFilteredPlays","HeaderContent","justify","style","fontSize","toggleAbout","toggleUser","href","FavouritesItem","padding","alignItems","play","console","log","setCurrentPlay","textTransform","removeFromFavourites","CloseOutlined","Sider","Layout","Header","Footer","Content","FavouritesList","collapsible","defaultCollapsed","collapsedWidth","theme","width","paddingTop","favourites","map","p","PlayFilters","Form","useForm","form","React","useState","genre","setGenre","before","setBefore","after","setAfter","span","name","onChange","e","genres","g","i","Option","htmlType","beforeYear","afterYear","resetFields","FavouriteButton","addToFavourites","HeartFilled","PlayMatches","handleHeaderClick","target","handleViewClick","plays","length","flex","paddingLeft","likelyDate","PlayList","height","filters","PlayOverview","currentTab","acts","playData","scenes","currentAct","characters","push","uniq","currentScene","speeches","s","speaker","synopsis","setPlayFilter","a","c","placeholder","setSearchText","PlayDetails","textAlign","backgroundColor","wiki","gutenberg","shakespeareOrg","desc","PlayCharacters","persona","player","PlayScript","fontFamily","stageDirection","filter","currentCharacter","lines","l","searchWords","searchText","textToHighlight","TabPane","Tabs","PlayData","defaultActiveKey","setCurrentTab","tab","maxHeight","overflow","disabled","PlayDetailApp","tabs","state","filename","this","foundPlayData","savedPlayData","find","url","fetch","response","json","data","playText","setState","savePlayData","error","foundAct","foundScene","text","index","Component","About","isOpen","modalIsOpen","contentLabel","toggleModal","User","user","details","membership","picture","src","thumbnail","alt","firstname","lastname","offset","city","country","date_joined","marginTop","App","currentPlay","filteredPlays","aboutIsOpen","userIsOpen","orderType","reset","cloneDeep","toLowerCase","includes","sort","b","aTitle","bTitle","Number","favouritesCopy","findIndex","splice","path","exact","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","playDataCopy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.04a05aec.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./css/Home.css\";\nimport { Form, Button, Space, Typography, Input } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nconst Home = (props) => {\n    const handleMatchingClick = () => {\n        const title = document.getElementById(\"title\").value;\n        props.setFilteredPlays({\"title\": title}, \"title\");\n    }\n    \n    const handleAllClick = () => {\n        props.setFilteredPlays({}, \"title\");\n    }\n    \n    return (\n        <div className=\"home\">\n            <article className=\"article\">\n                <Title level={1}>Play Browser</Title> \n                <Form>\n                    <Form.Item label=\"Search Plays\">\n                        <Input id=\"title\" type=\"text\"/>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Space>\n                            <Link to=\"/play-list\"><Button type=\"primary\" icon={<SearchOutlined />} onClick={handleMatchingClick}>Search Plays</Button></Link>\n                            <Link to=\"/play-list\"><Button onClick={handleAllClick}>Show All Plays</Button></Link>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </article>\n            <p>Phantom of the Opera at Istana Budaya, Kuala Lumpur. World Tour 2019.</p>\n        </div>\n    );\n};\n\nexport default Home","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport { Row, Col, Button, Space } from \"antd\";\n\nconst HeaderContent = (props) => {\n    const handleAboutClick = () => {\n        props.toggleAbout();\n    }\n    \n    const handleUserClick = () => {\n        props.toggleUser();\n    }\n    \n    return (\n        <Row justify=\"space-between\">\n            <Col>\n                <Link to=\"/home\" style={{fontSize: \"2rem\"}}>Play Browser</Link>\n            </Col>\n            <Col>\n                <Space>\n                    <Button onClick={handleAboutClick}>About</Button>\n                    <Button onClick={handleUserClick}>Profile</Button>\n                    <a href=\"https://comp4513-assign2.herokuapp.com/logout\"><Button type=\"primary\">Logout</Button></a>\n                </Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default HeaderContent","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {Button, Row} from \"antd\";\nimport { CloseOutlined } from '@ant-design/icons';\n\nconst FavouritesItem = (props) => {\n    const handleOnClick = () => {\n        props.removeFromFavourites(props.play);\n    }\n    \n    const handleViewClick = (play) => {\n        console.log(play);\n        props.setCurrentPlay(play);\n    }\n    \n    return (\n        <Row justify=\"space-between\" style={{padding: \"2px 10px\", alignItems: \"center\"}}>\n            <Link to=\"/play-detail\"><span onClick={() => {handleViewClick(props.play)}} style={{textTransform: \"uppercase\"}}>{props.play.title}</span></Link>\n            <Button type=\"primary\" onClick={handleOnClick} icon={<CloseOutlined />}/>\n        </Row>\n    );\n};\n\nexport default FavouritesItem","import React from \"react\";\nimport FavouritesItem from \"./FavouritesItem.js\";\nimport { Typography, Layout } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst { Title } = Typography;\n\nconst FavouritesList = (props) => {\n    return (\n        <Sider collapsible={true} \n                defaultCollapsed={false} \n                collapsedWidth={0} \n                theme=\"light\" \n                width={300} \n                style={{paddingTop: \"20px\"}}>\n            <Title level={2}>Favourites</Title>\n            {props.favourites.map((p) => \n                <FavouritesItem play={p} \n                                    removeFromFavourites={props.removeFromFavourites} \n                                    setCurrentPlay={props.setCurrentPlay}/>\n            )}\n        </Sider>\n    );\n};\n\nexport default FavouritesList","import React from \"react\";\nimport { Form, Input, Button, Space, Select, Switch, Typography, Col } from 'antd';\n\nconst { Title } = Typography;\n\nconst PlayFilters = (props) => {\n    const [form] = Form.useForm();\n    const [genre, setGenre] = React.useState(\"\");\n    const [before, setBefore] = React.useState(false);\n    const [after, setAfter] = React.useState(false);\n\n    const handleFilterClick = () => {\n        // get values from input elements\n        // changing these to use state breaks things that i don't want to deal with\n        const title = document.getElementById(\"title\").value; \n        const beforeYear = document.getElementById(\"beforeYear\").value;\n        const afterYear = document.getElementById(\"afterYear\").value;\n\n        //filter plays with input values\n        props.setFilteredPlays({\"title\": title,\n                                \"before\": before,\n                                \"beforeYear\": beforeYear,\n                                \"after\": after,\n                                \"afterYear\": afterYear,\n                                \"genre\": genre\n                               }, null, true);\n    }\n    \n    const handleClearClick = () => {\n        //set input values to initial values\n        form.resetFields();\n        \n        //remove filters from plays\n        props.setFilteredPlays({}, null, true);\n    }\n    \n    \n    return (\n        <Col span={6} style={{ padding: '0px 20px' }}>\n            <Title level={2}>Play Filters</Title>\n            <Form  form={form}>\n                <Form.Item label=\"Title\" name=\"title\">\n                    <Input id=\"title\" type=\"text\"/>\n                </Form.Item>\n                <Title level={3}>Year</Title>\n                <Form.Item label=\"Before\" name=\"before\">\n                    <Space>\n                    <Switch type=\"checkbox\" onChange={e => setBefore(e)}/>\n                    <Input id=\"beforeYear\" type=\"text\"/>\n                    </Space>\n                </Form.Item>\n                <Form.Item label=\"After\" name=\"after\">\n                    <Space>\n                        <Switch type=\"checkbox\" onChange={e => setAfter(e)}/>\n                        <Input id=\"afterYear\" type=\"text\"/>\n                    </Space>\n                </Form.Item>\n                <Form.Item label=\"Genre\" name=\"genre\">\n                    <Select onChange={e => setGenre(e)}>\n                        {props.genres.map((g, i) => \n                            <Select.Option key={i} value={g}>{g}</Select.Option>                          \n                        )}\n                    </Select>\n                </Form.Item>\n                <Form.Item>\n                    <Space>\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={handleFilterClick}>Filter</Button>\n                        <Button type=\"reset\" onClick={handleClearClick}>Clear</Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        </Col>\n    );\n};\n\nexport default PlayFilters","import React from \"react\";\nimport { Button } from \"antd\";\nimport { HeartFilled } from '@ant-design/icons';\n\nconst FavouriteButton = (props) => {\n    return (\n        <Button type=\"primary\" onClick={e => props.addToFavourites(props.play)} icon={<HeartFilled />}/>\n    );\n};\n\nexport default FavouriteButton","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport FavouriteButton from \"./FavouriteButton.js\";\nimport { Col } from 'antd';\nimport \"./css/PlayMatches.css\";\n\nconst PlayMatches = (props) => {\n    const handleHeaderClick = (e) => {\n        //sort plays by selected sort type\n        props.setFilteredPlays({}, e.target.title, false);\n    }\n    \n    const handleViewClick = (play) => {\n        props.setCurrentPlay(play);\n    }\n    \n    if (props.plays && props.plays.length > 0) {\n        return (\n            <Col className=\"play-matches\" flex=\"auto\" style={{ paddingLeft: '40px' }}>\n                <h1>List/Matches</h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <th title=\"title\" onClick={handleHeaderClick}>Title</th>\n                            <th title=\"year\" onClick={handleHeaderClick}>Year</th>  \n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                </table>\n                <hr/>\n                <div className=\"table-body\">\n                    <table>\n                        <tbody>\n                        {props.plays.map((p) => \n                            <tr key={p.id}>\n                                <td onClick={() => {handleViewClick(p)}}><Link to=\"/play-detail\">{p.title}</Link></td>\n                                <td>{p.likelyDate}</td>\n                                <td><FavouriteButton play={p} addToFavourites={props.addToFavourites}/></td>\n                                <td><Link to=\"/play-detail\"><button onClick={() => {handleViewClick(p)}}>View</button></Link></td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n                <hr/>\n            </Col>\n        );\n    }\n    else {\n        return (\n            <Col className=\"play-matches\" flex=\"auto\" style={{ padding: '40px' }}>\n                <h1>List/Matches</h1>\n                <p>No plays found!</p>\n            </Col>\n        )\n    }\n};\n\nexport default PlayMatches","import React from \"react\";\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport HeaderContent from \"./HeaderContent.js\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayFilters from \"./PlayFilters.js\";\nimport PlayMatches from \"./PlayMatches.js\";\nimport { Layout, Row } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// oh god antdesign is not made for three column setups\nconst PlayList = (props) => {\n    return (\n        <Layout style={{height:\"100vh\"}}>\n            <Header>\n                <HeaderContent toggleAbout={props.toggleAbout} toggleUser={props.toggleUser}/>\n            </Header>\n            <Layout>\n                <FavouritesList favourites={props.favourites} \n                                                removeFromFavourites={props.removeFromFavourites} \n                                                setCurrentPlay={props.setCurrentPlay}/>\n                <Content style={{padding: \"20px 40px\"}}>\n                    <Row justify=\"space-between\">\n                            <PlayFilters filters={props.filters} \n                                                                setFilteredPlays={props.setFilteredPlays} \n                                                                genres={props.genres}/>\n                            <PlayMatches plays={props.plays} \n                                    setFilteredPlays={props.setFilteredPlays} \n                                    addToFavourites={props.addToFavourites} \n                                    setCurrentPlay={props.setCurrentPlay}/>\n                    </Row>\n                </Content>\n            </Layout>\n        </Layout>\n//        <CSSTransitionGroup transitionName=\"favourites\" \n//                            transitionAppear={true} \n//                            transitionAppearTimeout={500}\n//                            transitionEnterTimeout={500} \n//                            transitionLeaveTimeout={500}>\n//        </CSSTransitionGroup>\n    );\n};\n\nexport default PlayList","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {uniq} from 'lodash';\nimport { Col, Typography, Button, Form, Input, Select } from 'antd';\nimport FavouriteButton from \"./FavouriteButton\";\nimport \"./css/PlayOverview.css\";\n\nconst { Title } = Typography;\n\nconst PlayOverview = (props) => {\n    //if current tab is text, deisplay filter options\n    if (props.currentTab === \"Text\") {\n        const acts = props.playData.acts;\n        const scenes = props.currentAct.scenes;\n        const characters = [\"All Players\"]; //add all players to list of characters\n        characters.push(...uniq(props.currentScene.speeches.map((s) => s.speaker)));\n        \n        return (\n            <Col className=\"play-overview\" span={6} style={{ padding: '0px 20px' }}>\n                <Title level={2}>{props.play.title}</Title>\n                <p>{props.play.synopsis}</p>\n                <Title level={3}>Script Search</Title>\n                <Form>\n                    <Form.Item label=\"Act\" name=\"act\">\n                        <Select name=\"act\" onChange={e => props.setPlayFilter(\"act\", e)}>{acts.map((a) => \n                            <Select.Option key={a.name} value={a.name}>{a.name}</Select.Option>)}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item label=\"Scene\" name=\"scene\">\n                        <Select name=\"scene\" onChange={e => props.setPlayFilter(\"scene\", e)}>{scenes.map((s) => \n                            <Select.Option key={s.name} value={s.name}>{s.name}</Select.Option>)}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item label=\"Character\" name=\"character\">\n                        <Select name=\"character\" onChange={e => props.setPlayFilter(\"character\", e)}>{characters.map((c) => \n                            <Select.Option key={c} value={c}>{c}</Select.Option>)}\n                        </Select>      \n                    </Form.Item>\n                    <Form.Item>\n                        <Input type=\"text\" placeholder=\"Enter a search term\" onChange={e => props.setSearchText(e.target.value)}/>\n                    </Form.Item>\n                </Form>\n                \n\n                <fieldset>\n                    \n                    \n                </fieldset>\n                <Link to=\"/play-list\"><Button>Close</Button></Link>\n                <FavouriteButton play={props.play} addToFavourites={props.addToFavourites}/>\n            </Col>\n        );\n    }\n    else {\n        return (\n            <Col className=\"play-overview\" span={6} style={{ padding: '0px 20px' }}>\n                <Title level={2}>{props.play.title}</Title>\n                <p>{props.play.synopsis}</p>\n                <Link to=\"/play-list\"><Button>Close</Button></Link>\n                <FavouriteButton play={props.play} addToFavourites={props.addToFavourites}/>\n            </Col>\n        );\n    }\n};\n\nexport default PlayOverview","import React from \"react\";\nimport { Row, Col } from 'antd';\n\nconst PlayDetails = (props) => {\n    return (\n        <div style={{textAlign:\"left\", backgroundColor: \"white\", padding:\"10px\"}}>\n            <Row>\n                <Col span={8}><strong>Likely date of composition:</strong></Col>\n                <Col span={16}>{props.play.likelyDate}</Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Genre:</strong></Col>\n                <Col span={16}>{props.play.genre}</Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Wiki Link:</strong></Col>\n                <Col span={16}><a href={props.play.wiki}>{props.play.wiki}</a></Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Gutenberg:</strong></Col>\n                <Col span={16}><a href={props.play.gutenberg}>{props.play.gutenberg}</a></Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Shakespeare.org:</strong></Col>\n                <Col span={16}><a href={props.play.shakespeareOrg}>{props.play.shakespeareOrg}</a></Col>\n            </Row>\n            <Row>\n                <Col span={8}><strong>Description:</strong></Col>\n                <Col span={16}>{props.play.desc}</Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default PlayDetails","import React from \"react\";\nconst PlayCharacters = (props) => {\n    return (\n        <div style={{textAlign:\"left\", backgroundColor: \"white\", padding:\"10px\"}}>\n            {props.persona.map((p) =>\n                    <p key={p.player}><strong>{p.player}</strong> - {p.desc ? p.desc : \"No description\"}</p>\n                )}\n        </div>\n    );\n}\n\nexport default PlayCharacters","import React from \"react\";\nimport Highlighter from \"react-highlight-words\";\n\nconst PlayScript = (props) => {\n\n    const highlightText = (text) => {\n        //replace found search text, with text wrapped in strong element\n        const searchText = props.searchText;\n        return (text.replace(searchText, \"<strong>\" + searchText + \"</strong>\"));\n    }\n\n    return (\n        <div style={{textAlign:\"left\", backgroundColor: \"white\", padding:\"10px\", fontFamily: \"serif\"}}>\n            <h2>{props.playData.title}</h2>\n                <article id=\"actHere\">\n                    <h3>{props.currentAct.name}</h3>\n                    <div id=\"sceneHere\">\n                        <h4>{props.currentScene.name}</h4>\n                        <p>{props.currentScene.title}</p>\n                        <p>{props.currentScene.stageDirection}</p>\n                        {props.currentScene.speeches.filter((s) => \n                            //if 'all players' is selected return all speeches\n                            //else return speeches based on current character\n                            props.currentCharacter === \"All Players\" ? true : props.currentCharacter === s.speaker\n                        ).map((s, i) => \n                            <div key={i}>\n                                <p className=\"speaker\"><strong>{s.speaker}</strong></p>\n                                {s.lines.map((l, i) => \n                                    <p className=\"line\" key={i}>\n                                         <Highlighter searchWords={[props.searchText]} textToHighlight={l}/>\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                </article>\n        </div>\n    );\n}\n\nexport default PlayScript","import React from \"react\";\nimport { Row, Col, Tabs } from 'antd';\nimport PlayDetails from \"./PlayDetails.js\";\nimport PlayCharacters from \"./PlayCharacters.js\";\nimport PlayScript from \"./PlayScript.js\";\nconst { TabPane } = Tabs;\n\nconst PlayData = (props) => {\n    return (\n        <Col className=\"container\" span={18} style={{ paddingLeft: '40px' }}>\n            <Tabs defaultActiveKey=\"0\" onChange={e=> props.setCurrentTab(e)}>\n                <TabPane tab=\"Details\" key=\"0\" style={{ maxHeight: \"calc(100vh - 180px)\", overflow: \"scroll\"}}>\n                    <PlayDetails play={props.play}/>\n                </TabPane>\n                {props.playData && props.playData.length == 0 &&\n                    <TabPane tab=\"Characters\" key=\"1\" disabled/>\n                }\n                {props.playData && props.playData.length != 0 &&\n                    <TabPane tab=\"Characters\" key=\"1\" style={{ maxHeight: \"calc(100vh - 180px)\", overflow: \"scroll\"}}>\n                        <PlayCharacters persona={props.playData.persona}/>\n                    </TabPane>\n                }\n                {props.playData && props.playData.length == 0 &&\n                    <TabPane tab=\"Script\" key=\"2\" disabled/>\n                }\n                {props.playData && props.playData.length != 0 &&\n                    <TabPane tab=\"Script\" key=\"2\" style={{ maxHeight: \"calc(100vh - 180px)\", overflow: \"scroll\"}}>\n                        <PlayScript playData={props.playData} \n                                    currentAct={props.currentAct}\n                                    currentScene={props.currentScene}\n                                    currentCharacter={props.currentCharacter}\n                                    />\n                    </TabPane>\n                }\n\n                \n            </Tabs>\n        </Col>\n    );\n}\n\nexport default PlayData","import React from \"react\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayOverview from \"./PlayOverview.js\";\nimport HeaderContent from \"./HeaderContent.js\";\nimport PlayData from \"./PlayData.js\";\nimport { Layout, Row } from 'antd';\nimport \"./css/PlayDetailApp.css\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass PlayDetailApp extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        //initialize available tabs\n        const tabs = [\"Details\", \"Characters\", \"Text\"];\n        \n        //initialize state values\n        this.state = {currentTab: tabs[0],\n                      tabs: props.play.filename ? tabs : [tabs[0]],\n                      playData: [],\n                      currentAct: null,\n                      currentScene: null,\n                      currentCharacter: \"All Players\",\n                      searchText: \"\"};\n    }\n                            \n    async componentDidMount() {\n        //only get data if filename is not null\n        if (this.props.play.filename) {\n            //find saved data with play id\n            const foundPlayData = this.props.savedPlayData.find((p) => p.id === this.props.play.id);\n            \n            //if not saved data is found, fetch\n            if (!foundPlayData) {\n                try {\n                    const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" + this.props.play.id;\n                    const response = await fetch(url);\n                    const data = await response.json();\n                    const playText = data\n                    //const playText = data[0].playText;\n                    this.setState({playData: playText});\n                    console.log(playText);\n                    \n                    //set current act and scene with first in arrays\n                    this.setState({currentAct: playText.acts[0]});\n                    this.setState({currentScene: playText.acts[0].scenes[0]});\n                    \n                    //save play data\n                    this.props.savePlayData(this.props.play, playText);\n                } \n                catch {\n                    console.error(\"fetch error\");\n                }\n            }\n            else {\n                //if saved play data is found, set state values\n                this.setState({playData: foundPlayData.data});\n                this.setState({currentAct: foundPlayData.data.acts[0]});\n                this.setState({currentScene: foundPlayData.data.acts[0].scenes[0]});\n            }\n        }\n    }\n    \n    render() {\n        const tabs = [\"Details\", \"Characters\", \"Text\"];\n        const setCurrentTab = (index) => {\n            this.setState({currentTab: tabs[index]});\n        }\n        \n        const setPlayFilter = (name, value) => {\n            if (name === \"act\") {\n                //find act from play data and set first scene\n                const foundAct = this.state.playData.acts.find((a) => a.name === value);\n                this.setState({currentAct: foundAct});\n                this.setState({currentScene: foundAct.scenes[0]});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"scene\") {\n                //find scene from current act\n                const foundScene = this.state.currentAct.scenes.find((s) => s.name === value);\n                this.setState({currentScene: foundScene});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"character\") {\n                //set current character\n                this.setState({currentCharacter: value});\n            }\n        }\n        \n        const setSearchText = (text) => {\n            this.setState({searchText: text});\n        }\n        \n        return (\n            <Layout style={{height:\"100vh\"}}>\n                <Header>\n                    <HeaderContent toggleAbout={this.props.toggleAbout} toggleUser={this.props.toggleUser}/>\n                </Header>\n                <Layout>\n                    <FavouritesList favourites={this.props.favourites} \n                                removeFromFavourites={this.props.removeFromFavourites}\n                                setCurrentPlay={this.props.setCurrentPlay}\n                                />\n                    <Content style={{padding: \"20px 40px\"}}>\n                        <Row justify=\"space-between\">\n                            <PlayOverview currentTab={this.state.currentTab} \n                                    play={this.props.play} \n                                    playData={this.state.playData} \n                                    currentAct={this.state.currentAct} \n                                    currentScene={this.state.currentScene} \n                                    addToFavourites={this.props.addToFavourites}\n                                    setPlayFilter={setPlayFilter}\n                                    setSearchText={setSearchText}/>\n                            <PlayData currentTab={this.state.currentTab} \n                                    tabs={this.state.tabs} \n                                    play={this.props.play} \n                                    playData={this.state.playData} \n                                    currentAct={this.state.currentAct}\n                                    currentScene={this.state.currentScene}\n                                    currentCharacter={this.state.currentCharacter}\n                                    searchText={this.state.searchText}\n                                    setCurrentTab={setCurrentTab}/>\n                        </Row>\n                    </Content>\n                </Layout>\n            </Layout>\n        );\n    }\n};\n\nexport default PlayDetailApp","import React from \"react\";\nimport Modal from 'react-modal';\nimport { Typography, Button } from 'antd';\nconst { Title } = Typography;\n\nconst About = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    return (\n        <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"modal\">\n            <Title level={4}>About</Title>\n            <Title level={5}>Group Members</Title>\n            <p>Brian Atuh</p>\n            <p>Olga Koldachenko</p>\n            <Title level={5}>GitHub Link</Title>\n            <p><a href=\"https://github.com/batuh836/comp4513-assign2\">comp4513_assign2</a></p>\n            <Title level={5}>React CSS</Title>\n            <p><a href=\"https://ant.design/\">Ant Design</a></p>\n            <Button type=\"primary\" onClick={handleOnClick}>Close</Button>\n        </Modal>\n    );\n};\n\nexport default About","import React from \"react\";\nimport Modal from 'react-modal';\nimport { Typography, Button, Row, Col, Space } from 'antd';\nconst { Title } = Typography;\n\n\nconst User = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    if (props.user) {\n        const details = props.user.details;\n        const membership = props.user.membership;\n        const picture = props.user.picture;\n        return (\n            <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"modal\">\n            <Title level={4}>Profile</Title>\n            <Row justify=\"space-between\">\n                <Col span={2}>\n                    <img src={picture.thumbnail} alt=\"picture\"/><br/>\n                </Col>\n                <Col flex=\"auto\">\n                    <Title level={5}>{details.firstname} {details.lastname}</Title>\n                </Col>\n            </Row>\n            <Row>\n                <Col offset={2} span={11}>\n                    Location:\n                </Col>\n                <Col span={11}>\n                    {details.city}, {details.country}\n                </Col>\n            </Row>\n            <Row>\n                <Col offset={2} span={11}>\n                    Joined:\n                </Col>\n                <Col span={11}>\n                    {membership.date_joined}\n                </Col>\n            </Row>\n            <Button type=\"primary\" onClick={handleOnClick} style={{marginTop: \"10px\"}}>Close</Button>\n            </Modal>\n        );\n    }\n    else {\n        return null;\n    }\n};\n\nexport default User","import React from \"react\";\nimport './App.css';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport {Route} from 'react-router-dom';\nimport {cloneDeep, uniq} from 'lodash';\n//import Header from \"./components/HeaderContent.js\";\nimport Home from \"./components/Home.js\";\nimport PlayList from \"./components/PlayList.js\";\nimport PlayDetailApp from \"./components/PlayDetailApp.js\";\nimport About from \"./components/About.js\";\nimport User from \"./components/User.js\";\nimport 'antd/dist/antd.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        //set states to initial values\n        this.state = {user: null,\n                      plays: [],\n                      genres: [],\n                      currentPlay: null,\n                      filteredPlays: [],\n                      favourites: [],\n                      savedPlayData: [],\n                      aboutIsOpen: false,\n                      userIsOpen: false};\n    }\n                            \n    async componentDidMount() {\n        if (!this.state.user) {\n            try {\n                const url = \"https://comp4513-assign2.herokuapp.com/user\";\n                const response = await fetch(url);\n                const data = await response.json();\n                this.setState({user: data});\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n\n        if (!this.state.plays.length) {\n            try {\n                const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\n                const response = await fetch(url);\n                const data = await response.json();\n                \n                this.setState({plays: data});\n                this.setState({filteredPlays: data});\n                \n                //add unique genres to state\n                var genres = [\"\"];\n                genres.push(...uniq(data.map((p) => p.genre)));\n                this.setState({genres: genres});\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n    }\n    \n    render() {\n        //methods\n        const setCurrentPlay = (play) => {\n            this.setState({currentPlay: play});\n        }\n        \n        const toggleAbout = () => {\n            if (this.state.aboutIsOpen) {\n                this.setState({aboutIsOpen: false});\n            }\n            else {\n                this.setState({aboutIsOpen: true});\n            }\n        }\n        \n        const toggleUser = () => {\n            if (this.state.userIsOpen) {\n                this.setState({userIsOpen: false});\n            }\n            else {\n                this.setState({userIsOpen: true});\n            }\n        }\n        \n        const setFilteredPlays = (filters, orderType, reset) => {\n            var filteredPlays = reset ? cloneDeep(this.state.plays) : cloneDeep(this.state.filteredPlays); \n            \n            //filter by title\n            if (filters.title) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.title.toLowerCase().includes(filters.title.toLowerCase()));\n            }\n            \n            //filter by beforeYear, if enabled\n            if (filters.before && filters.beforeYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate < filters.beforeYear);\n            }\n            \n            //filter by afterYear, if enabled\n            if (filters.after && filters.afterYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate > filters.afterYear);\n            }\n            \n            //filter by genre\n            if (filters.genre) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.genre === filters.genre);\n            }\n            \n            //order filtered plays\n            if (orderType) {\n                if (orderType === \"title\") {\n                    filteredPlays = filteredPlays.sort((a,b) => {\n                                        let aTitle = a.title.toLowerCase();\n                                        let bTitle = b.title.toLowerCase(); \n                                        if (aTitle > bTitle) {return 1}\n                                        else if (aTitle < bTitle) {return -1}\n                                        else {return 0}\n                                    });\n                }\n                else if (orderType === \"year\") {\n                    filteredPlays = filteredPlays.sort((a,b) => \n                                        Number(a.likelyDate) - Number(b.likelyDate));\n                }\n            }\n            \n//            console.log(filters);\n//            console.log(filteredPlays);\n            this.setState({filteredPlays: filteredPlays});\n        }\n        \n        const addToFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //prevent duplicates from being added\n            if (!favouritesCopy.find((p) => p.id === play.id)) {\n                favouritesCopy.push(play);\n            }\n            \n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const removeFromFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //get index of play and remove it\n            const index = favouritesCopy.findIndex((p) => p.id === play.id);\n            favouritesCopy.splice(index, 1);\n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const savePlayData = (play, data) => {\n            const playDataCopy = cloneDeep(this.state.savedPlayData);\n            \n            //save play data with corresponding id\n            playDataCopy.push({id: play.id, data: data});\n            this.setState({savedPlayData: playDataCopy});\n        }\n        \n        return (\n            <div className=\"app\">\n                <Route path=\"/home\" exact>\n                    <CSSTransitionGroup transitionName=\"landing\" \n                                        transitionAppear={true} \n                                        transitionAppearTimeout={500}\n                                        transitionEnterTimeout={500} \n                                        transitionLeaveTimeout={500}>\n                        <Home setFilteredPlays={setFilteredPlays}/>\n                    </CSSTransitionGroup>\n                </Route>\n                <Route path=\"/play-list\" exact>\n                    <PlayList plays={this.state.filteredPlays}\n                              genres={this.state.genres}\n                              favourites={this.state.favourites}\n                              filters={this.state.filters}\n                              setFilteredPlays={setFilteredPlays} \n                              addToFavourites={addToFavourites}\n                              removeFromFavourites={removeFromFavourites}\n                              setCurrentPlay={setCurrentPlay}\n                              toggleAbout={toggleAbout}\n                              toggleUser={toggleUser}\n                              />\n                </Route>\n                <Route path=\"/play-detail\" exact>\n                \n                    <PlayDetailApp play={this.state.currentPlay}\n                            savedPlayData={this.state.savedPlayData}\n                            favourites={this.state.favourites}\n                            addToFavourites={addToFavourites}\n                            removeFromFavourites={removeFromFavourites}\n                            savePlayData={savePlayData}\n                            toggleAbout={toggleAbout}\n                            toggleUser={toggleUser}\n                            setCurrentPlay={setCurrentPlay}\n                            />\n                </Route>\n                <About modalIsOpen={this.state.aboutIsOpen} toggleModal={toggleAbout}/>\n                <User modalIsOpen={this.state.userIsOpen} toggleModal={toggleUser} user={this.state.user}/>\n            </div>\n        );                \n    }\n}\n\nexport default App;\n\n//<Header toggleAbout={toggleAbout} toggleUser={toggleUser}/>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter><App/></BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n//ReactDOMServer.renderToString(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n//ReactDOMServer.renderToStaticMarkup(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}