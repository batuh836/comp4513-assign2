{"version":3,"sources":["components/Home.js","components/HeaderContent.js","components/FavouritesItem.js","components/FavouritesList.js","components/PlayFilters.js","components/FavouriteButton.js","components/PlayMatches.js","components/PlayList.js","components/PlayOverview.js","components/PlayDataTabBar.js","components/PlayDataView.js","components/PlayData.js","components/PlayDetailApp.js","components/About.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["Title","Typography","Home","props","className","level","Item","label","id","type","to","icon","SearchOutlined","onClick","title","document","getElementById","value","setFilteredPlays","HeaderContent","justify","component","Link","style","fontSize","toggleAbout","toggleUser","href","FavouritesItem","padding","alignItems","play","console","log","setCurrentPlay","textTransform","removeFromFavourites","CloseOutlined","Sider","Layout","Header","Footer","Content","FavouritesList","collapsible","defaultCollapsed","collapsedWidth","theme","width","paddingTop","favourites","map","p","PlayFilters","Form","useForm","form","React","useState","genre","setGenre","before","setBefore","after","setAfter","span","name","onChange","e","genres","g","i","Option","htmlType","beforeYear","afterYear","resetFields","FavouriteButton","addToFavourites","PlayMatches","handleHeaderClick","target","handleViewClick","plays","length","flex","paddingLeft","likelyDate","PlayList","filters","PlayOverview","handleFavouritesClick","handleSelectChange","setPlayFilter","currentTab","acts","playData","scenes","currentAct","characters","push","uniq","currentScene","speeches","s","speaker","a","c","placeholder","setSearchText","synopsis","PlayDataTabBar","handleOnClick","classList","toggle","setCurrentTab","getClassName","t","tabs","PlayDataView","wiki","gutenberg","shakespeareOrg","desc","persona","player","stageDirection","filter","currentCharacter","lines","l","searchWords","searchText","textToHighlight","PlayData","PlayDetailApp","state","filename","this","foundPlayData","savedPlayData","find","url","fetch","response","json","data","playText","setState","savePlayData","error","foundAct","foundScene","text","tab","Component","About","isOpen","modalIsOpen","contentLabel","toggleModal","User","user","details","membership","picture","firstname","lastname","city","country","date_joined","src","thumbnail","alt","App","currentPlay","filteredPlays","aboutIsOpen","userIsOpen","orderType","reset","cloneDeep","toLowerCase","includes","sort","b","aTitle","bTitle","Number","favouritesCopy","index","findIndex","splice","path","exact","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","playDataCopy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7089d948.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport \"./css/Home.css\";\nimport { Form, Button, Space, Typography, Input } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nconst Home = (props) => {\n    const handleMatchingClick = () => {\n        const title = document.getElementById(\"title\").value;\n        props.setFilteredPlays({\"title\": title}, \"title\");\n    }\n    \n    const handleAllClick = () => {\n        props.setFilteredPlays({}, \"title\");\n    }\n    \n    return (\n        <div className=\"home\">\n            <article className=\"article\">\n                <Title level={1}>Play Browser</Title> \n                <Form>\n                    <Form.Item label=\"Search Plays\">\n                        <Input id=\"title\" type=\"text\"/>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Space>\n                            <Link to=\"/play-list\"><Button type=\"primary\" icon={<SearchOutlined />} onClick={handleMatchingClick}>Search Plays</Button></Link>\n                            <Link to=\"/play-list\"><Button onClick={handleAllClick}>Show All Plays</Button></Link>\n                        </Space>\n                    </Form.Item>\n                </Form>\n            </article>\n            <p>Phantom of the Opera at Istana Budaya, Kuala Lumpur. World Tour 2019.</p>\n        </div>\n    );\n};\n\nexport default Home","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport { Typography, Row, Col, Button, Space } from \"antd\";\n\nconst { Title } = Typography;\n\nconst HeaderContent = (props) => {\n    const handleAboutClick = () => {\n        props.toggleAbout();\n    }\n    \n    const handleUserClick = () => {\n        props.toggleUser();\n    }\n    \n    return (\n        <Row justify=\"space-between\">\n            <Col>\n                <Link to=\"/home\" component={Typography.Link} style={{fontSize: \"2rem\"}}>Play Browser</Link>\n            </Col>\n            <Col>\n                <Space>\n                    <Button onClick={handleAboutClick}>About</Button>\n                    <Button onClick={handleUserClick}>Profile</Button>\n                    <a href=\"https://comp4513-assign2.herokuapp.com/logout\"><Button type=\"primary\">Logout</Button></a>\n                </Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default HeaderContent","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {Button, Row, Col} from \"antd\";\nimport { CloseOutlined } from '@ant-design/icons';\n\nconst FavouritesItem = (props) => {\n    const handleOnClick = () => {\n        props.removeFromFavourites(props.play);\n    }\n    \n    const handleViewClick = (play) => {\n        console.log(play);\n        props.setCurrentPlay(play);\n    }\n    \n    return (\n        <Row justify=\"space-between\" style={{padding: \"2px 10px\", alignItems: \"center\"}}>\n            <Link to=\"/play-detail\"><span onClick={() => {handleViewClick(props.play)}} style={{textTransform: \"uppercase\"}}>{props.play.title}</span></Link>\n            <Button type=\"primary\" onClick={handleOnClick} icon={<CloseOutlined />}/>\n        </Row>\n    );\n};\n\nexport default FavouritesItem","import React from \"react\";\nimport FavouritesItem from \"./FavouritesItem.js\";\nimport { Col, Typography, Layout } from 'antd';\nimport \"./css/FavouritesList.css\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nconst { Title } = Typography;\n\nconst FavouritesList = (props) => {\n    return (\n        <Sider collapsible={true} \n                defaultCollapsed={false} \n                collapsedWidth={0} \n                theme=\"light\" \n                width={300} \n                style={{paddingTop: \"20px\"}}>\n            <Title level={2}>Favourites</Title>\n            {props.favourites.map((p) => \n                <FavouritesItem play={p} \n                                    removeFromFavourites={props.removeFromFavourites} \n                                    setCurrentPlay={props.setCurrentPlay}/>\n            )}\n        </Sider>\n    );\n};\n\nexport default FavouritesList","import React from \"react\";\nimport { Form, Input, Button, Space, Select, Switch, Typography, Col } from 'antd';\n\nconst { Title } = Typography;\n\nconst PlayFilters = (props) => {\n    const [form] = Form.useForm();\n    const [genre, setGenre] = React.useState(\"\");\n    const [before, setBefore] = React.useState(false);\n    const [after, setAfter] = React.useState(false);\n\n    const handleFilterClick = () => {\n        // get values from input elements\n        // changing these to use state breaks things that i don't want to deal with\n        const title = document.getElementById(\"title\").value; \n        const beforeYear = document.getElementById(\"beforeYear\").value;\n        const afterYear = document.getElementById(\"afterYear\").value;\n\n        //filter plays with input values\n        props.setFilteredPlays({\"title\": title,\n                                \"before\": before,\n                                \"beforeYear\": beforeYear,\n                                \"after\": after,\n                                \"afterYear\": afterYear,\n                                \"genre\": genre\n                               }, null, true);\n    }\n    \n    const handleClearClick = () => {\n        //set input values to initial values\n        form.resetFields();\n        \n        //remove filters from plays\n        props.setFilteredPlays({}, null, true);\n    }\n    \n    \n    return (\n        <Col span={6} style={{ padding: '0px 20px' }}>\n            <Title level={2}>Play Filters</Title>\n            <Form  form={form}>\n                <Form.Item label=\"Title\" name=\"title\">\n                    <Input id=\"title\" type=\"text\"/>\n                </Form.Item>\n                <Title level={3}>Year</Title>\n                <Form.Item label=\"Before\" name=\"before\">\n                    <Space>\n                    <Switch type=\"checkbox\" onChange={e => setBefore(e)}/>\n                    <Input id=\"beforeYear\" type=\"text\"/>\n                    </Space>\n                </Form.Item>\n                <Form.Item label=\"After\" name=\"after\">\n                    <Space>\n                        <Switch type=\"checkbox\" onChange={e => setAfter(e)}/>\n                        <Input id=\"afterYear\" type=\"text\"/>\n                    </Space>\n                </Form.Item>\n                <Form.Item label=\"Genre\" name=\"genre\">\n                    <Select onChange={e => setGenre(e)}>\n                        {props.genres.map((g, i) => \n                            <Select.Option key={i} value={g}>{g}</Select.Option>                          \n                        )}\n                    </Select>\n                </Form.Item>\n                <Form.Item>\n                    <Space>\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={handleFilterClick}>Filter</Button>\n                        <Button type=\"reset\" onClick={handleClearClick}>Clear</Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        </Col>\n    );\n};\n\nexport default PlayFilters","import React from \"react\";\n\nconst FavouriteButton = (props) => {\n    const handleOnClick = () => {\n        props.addToFavourites(props.play);\n    }\n    \n    return (\n        <button onClick={handleOnClick}>♥</button>\n    );\n};\n\nexport default FavouriteButton","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport FavouriteButton from \"./FavouriteButton.js\";\nimport { Col } from 'antd';\nimport \"./css/PlayMatches.css\";\n\nconst PlayMatches = (props) => {\n    const handleHeaderClick = (e) => {\n        //sort plays by selected sort type\n        props.setFilteredPlays({}, e.target.title, false);\n    }\n    \n    const handleViewClick = (play) => {\n        props.setCurrentPlay(play);\n    }\n    \n    if (props.plays && props.plays.length > 0) {\n        return (\n            <Col className=\"play-matches\" flex=\"auto\" style={{ paddingLeft: '40px' }}>\n                <h1>List/Matches</h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <th title=\"title\" onClick={handleHeaderClick}>Title</th>\n                            <th title=\"year\" onClick={handleHeaderClick}>Year</th>  \n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                </table>\n                <hr/>\n                <div className=\"table-body\">\n                    <table>\n                        <tbody>\n                        {props.plays.map((p) => \n                            <tr key={p.id}>\n                                <td onClick={() => {handleViewClick(p)}}><Link to=\"/play-detail\">{p.title}</Link></td>\n                                <td>{p.likelyDate}</td>\n                                <td><FavouriteButton play={p} addToFavourites={props.addToFavourites}/></td>\n                                <td><Link to=\"/play-detail\"><button onClick={() => {handleViewClick(p)}}>View</button></Link></td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n                <hr/>\n            </Col>\n        );\n    }\n    else {\n        return (\n            <Col className=\"play-matches\" flex=\"auto\" style={{ padding: '40px' }}>\n                <h1>List/Matches</h1>\n                <p>No plays found!</p>\n            </Col>\n        )\n    }\n};\n\nexport default PlayMatches","import React from \"react\";\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport HeaderContent from \"./HeaderContent.js\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayFilters from \"./PlayFilters.js\";\nimport PlayMatches from \"./PlayMatches.js\";\nimport { Layout, Row, Col } from 'antd';\nimport \"./css/PlayList.css\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n// oh god antdesign is not made for three column setups\nconst PlayList = (props) => {\n    return (\n        <Layout>\n            <Header>\n                <HeaderContent toggleAbout={props.toggleAbout} toggleUser={props.toggleUser}/>\n            </Header>\n            <Layout>\n                <FavouritesList favourites={props.favourites} \n                                                removeFromFavourites={props.removeFromFavourites} \n                                                setCurrentPlay={props.setCurrentPlay}/>\n                <Content style={{padding: \"20px 40px\"}}>\n                    <Row justify=\"space-between\">\n                            <PlayFilters filters={props.filters} \n                                                                setFilteredPlays={props.setFilteredPlays} \n                                                                genres={props.genres}/>\n                            <PlayMatches plays={props.plays} \n                                    setFilteredPlays={props.setFilteredPlays} \n                                    addToFavourites={props.addToFavourites} \n                                    setCurrentPlay={props.setCurrentPlay}/>\n                    </Row>\n                </Content>\n            </Layout>\n        </Layout>\n//        <CSSTransitionGroup transitionName=\"favourites\" \n//                            transitionAppear={true} \n//                            transitionAppearTimeout={500}\n//                            transitionEnterTimeout={500} \n//                            transitionLeaveTimeout={500}>\n//        </CSSTransitionGroup>\n    );\n};\n\nexport default PlayList","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {uniq} from 'lodash';\nimport \"./css/PlayOverview.css\";\n\nconst PlayOverview = (props) => {\n    const handleFavouritesClick = () => {\n        props.addToFavourites(props.play);\n    }\n    \n    const handleSelectChange = (e) => {\n        const {name, value} = e.target;\n        props.setPlayFilter(name, value);\n    }\n    \n    const handleTextChange = (e) => {\n        props.setSearchText(e.target.value);\n    }\n    \n    //if current tab is text, deisplay filter options\n    if (props.currentTab === \"Text\") {\n        const acts = props.playData.acts;\n        const scenes = props.currentAct.scenes;\n        const characters = [\"All Players\"]; //add all players to list of characters\n        characters.push(...uniq(props.currentScene.speeches.map((s) => s.speaker)));\n        \n        return (\n            <div className=\"play-overview\">\n                <h1>{props.play.title}</h1>\n                <select name=\"act\" onChange={handleSelectChange}>{acts.map((a) => \n                    <option key={a.name} value={a.name}>{a.name}</option>)}\n                </select>\n                <select name=\"scene\" onChange={handleSelectChange}>{scenes.map((s) => \n                    <option key={s.name} value={s.name}>{s.name}</option>)}\n                </select>\n                <fieldset>\n                    <select name=\"character\" onChange={handleSelectChange}>{characters.map((c) => \n                        <option key={c} value={c}>{c}</option>)}\n                    </select>      \n                    <input type=\"text\" placeholder=\"Enter a search term\" onChange={handleTextChange}/>\n                </fieldset>\n                <Link to=\"/play-list\"><button>Close</button></Link>\n                <button onClick={handleFavouritesClick}>♥</button>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"play-overview\">\n                <h1>{props.play.title}</h1>\n                <p>{props.play.synopsis}</p>\n                <Link to=\"/play-list\"><button>Close</button></Link>\n                <button onClick={handleFavouritesClick}>♥</button>\n            </div>\n        );\n    }\n};\n\nexport default PlayOverview","import React from \"react\";\nimport \"./css/PlayDataTabBar.css\";\n\nconst PlayDataTabBar = (props) => {\n    const handleOnClick = (e) => {\n        if (e.target.title !== props.currentTab) {\n            //toggle active tabs\n            e.target.classList.toggle(\"active\");\n            props.setCurrentTab(e.target.title);\n        }\n    }\n    \n    const getClassName = (t) => {\n        //set initial active tab\n        return (t === props.currentTab ? \"active\" : \"\");\n    }\n    \n    return (\n        <div className=\"tab-bar\">\n            {props.tabs.map((t) => \n                <button className={getClassName(t)} key={t} title={t} onClick={handleOnClick}>{t}</button>\n            )}\n        </div>\n    );\n};\n\nexport default PlayDataTabBar","import React from \"react\";\nimport Highlighter from \"react-highlight-words\";\nimport \"./css/PlayDataView.css\";\n\nconst PlayDataView = (props) => {\n    const highlightText = (text) => {\n        //replace found search text, with text wrapped in strong element\n        const searchText = props.searchText;\n        return (text.replace(searchText, \"<strong>\" + searchText + \"</strong>\"));\n    }\n    \n    //display data according to current tab\n    if (props.currentTab === \"Details\") {\n        return (\n            <div className=\"data-view\">\n                <p><strong>Likely date of composition:</strong> {props.play.likelyDate}</p>\n                <p><strong>Genre:</strong> {props.play.genre}</p>\n                <p><strong>Wiki Link:</strong> <a href={props.play.wiki}>{props.play.wiki}</a></p>\n                <p><strong>Gutenberg:</strong> <a href={props.play.gutenberg}>{props.play.gutenberg}</a></p>\n                <p><strong>Shakespeare.org Link:</strong> <a href={props.play.shakespeareOrg}>{props.play.shakespeareOrg}</a></p>\n                <p><strong>Description:</strong></p>\n                <p>{props.play.desc}</p>\n            </div>\n        );\n    }\n    else if (props.playData === null || props.currentAct === null) {\n        return (\n            <div className=\"data-view\"></div>\n        );\n    }\n    else if (props.currentTab === \"Characters\") {\n        return (\n            <div className=\"data-view\">\n                {props.playData.persona.map((p) =>\n                    <p key={p.player}><strong>{p.player}</strong> - {p.desc ? p.desc : \"No description\"}</p>\n                )}\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"data-view\">\n                <h2>{props.playData.title}</h2>\n                <article id=\"actHere\">\n                    <h3>{props.currentAct.name}</h3>\n                    <div id=\"sceneHere\">\n                        <h4>{props.currentScene.name}</h4>\n                        <p>{props.currentScene.title}</p>\n                        <p>{props.currentScene.stageDirection}</p>\n                        {props.currentScene.speeches.filter((s) => \n                            //if 'all players' is selected return all speeches\n                            //else return speeches based on current character\n                            props.currentCharacter === \"All Players\" ? true : props.currentCharacter === s.speaker\n                        ).map((s, i) => \n                            <div key={i}>\n                                <p className=\"speaker\"><strong>{s.speaker}</strong></p>\n                                {s.lines.map((l, i) => \n                                    <p className=\"line\" key={i}>\n                                         <Highlighter searchWords={[props.searchText]} textToHighlight={l}/>\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                </article>\n            </div>\n        );\n    }\n};\n\nexport default PlayDataView","import React from \"react\";\nimport PlayDataTabBar from \"./PlayDataTabBar.js\";\nimport PlayDataView from \"./PlayDataView.js\";\n\nconst PlayData = (props) => {\n    return (\n        <div className=\"container\">\n            <PlayDataTabBar tabs={props.tabs} \n                            currentTab={props.currentTab} \n                            setCurrentTab={props.setCurrentTab}/>\n            <hr/>\n            <PlayDataView currentTab={props.currentTab} \n                          play={props.play} \n                          playData={props.playData}\n                          currentAct={props.currentAct}\n                          currentScene={props.currentScene}\n                          currentCharacter={props.currentCharacter}\n                          searchText={props.searchText}/>\n            <hr/>\n        </div>\n    );\n}\n\nexport default PlayData","import React from \"react\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayOverview from \"./PlayOverview.js\";\nimport PlayData from \"./PlayData.js\";\nimport \"./css/PlayDetailApp.css\";\n\nclass PlayDetailApp extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        //initialize available tabs\n        const tabs = [\"Details\", \"Characters\", \"Text\"];\n        \n        //initialize state values\n        this.state = {currentTab: tabs[0],\n                      tabs: props.play.filename ? tabs : [tabs[0]],\n                      playData: [],\n                      currentAct: null,\n                      currentScene: null,\n                      currentCharacter: \"All Players\",\n                      searchText: \"\"};\n    }\n                            \n    async componentDidMount() {\n        //only get data if filename is not null\n        if (this.props.play.filename) {\n            //find saved data with play id\n            const foundPlayData = this.props.savedPlayData.find((p) => p.id === this.props.play.id);\n            \n            //if not saved data is found, fetch\n            if (!foundPlayData) {\n                try {\n                    const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" + this.props.play.id;\n                    const response = await fetch(url);\n                    const data = await response.json();\n                    const playText = data[0].playText;\n                    this.setState({playData: playText});\n                    //console.log(playText);\n                    \n                    //set current act and scene with first in arrays\n                    this.setState({currentAct: playText.acts[0]});\n                    this.setState({currentScene: playText.acts[0].scenes[0]});\n                    \n                    //save play data\n                    this.props.savePlayData(this.props.play, playText);\n                } \n                catch {\n                    console.error(\"fetch error\");\n                }\n            }\n            else {\n                //if saved play data is found, set state values\n                this.setState({playData: foundPlayData.data});\n                this.setState({currentAct: foundPlayData.data.acts[0]});\n                this.setState({currentScene: foundPlayData.data.acts[0].scenes[0]});\n            }\n        }\n    }\n    \n    render() {\n        const setCurrentTab = (tab) => {\n            this.setState({currentTab: tab});\n        }\n        \n        const setPlayFilter = (name, value) => {\n            if (name === \"act\") {\n                //find act from play data and set first scene\n                const foundAct = this.state.playData.acts.find((a) => a.name === value);\n                this.setState({currentAct: foundAct});\n                this.setState({currentScene: foundAct.scenes[0]});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"scene\") {\n                //find scene from current act\n                const foundScene = this.state.currentAct.scenes.find((s) => s.name === value);\n                this.setState({currentScene: foundScene});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"character\") {\n                //set current character\n                this.setState({currentCharacter: value});\n            }\n        }\n        \n        const setSearchText = (text) => {\n            this.setState({searchText: text});\n        }\n        \n        return (\n            <div className=\"play-detail hide-favourites\">\n                <FavouritesList favourites={this.props.favourites} \n                                removeFromFavourites={this.props.removeFromFavourites}/>\n                <PlayOverview currentTab={this.state.currentTab} \n                              play={this.props.play} \n                              playData={this.state.playData} \n                              currentAct={this.state.currentAct} \n                              currentScene={this.state.currentScene} \n                              addToFavourites={this.props.addToFavourites}\n                              setPlayFilter={setPlayFilter}\n                              setSearchText={setSearchText}/>\n                <PlayData currentTab={this.state.currentTab} \n                          tabs={this.state.tabs} \n                          play={this.props.play} \n                          playData={this.state.playData} \n                          currentAct={this.state.currentAct}\n                          currentScene={this.state.currentScene}\n                          currentCharacter={this.state.currentCharacter}\n                          searchText={this.state.searchText}\n                          setCurrentTab={setCurrentTab}/>\n            </div>\n        );\n    }\n};\n\nexport default PlayDetailApp","import React from \"react\";\nimport Modal from 'react-modal';\nimport \"./css/About.css\";\n\nconst About = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    return (\n        <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"about\">\n            <h2>About</h2>\n            <p className=\"subtitle\">Group Members</p>\n            <p>Brian Atuh</p>\n            <p>Olga Koldachenko</p>\n            <p className=\"subtitle\">GitHub Link</p>\n            <p><a href=\"https://github.com/batuh836/comp4513-assign2\">comp4513_assign2</a></p>\n            <button onClick={handleOnClick}>Close</button>\n        </Modal>\n    );\n};\n\nexport default About","import React from \"react\";\nimport Modal from 'react-modal';\nimport \"./css/User.css\";\n\nconst User = (props) => {\n    const handleOnClick = () => {\n        props.toggleModal();\n    }\n    \n    if (props.user) {\n        const details = props.user.details;\n        const membership = props.user.membership;\n        const picture = props.user.picture;\n        return (\n            <Modal isOpen={props.modalIsOpen} contentLabel=\"Example Modal\" className=\"user\">\n                <h1>Profile</h1>\n                <span>Name: {details.firstname} {details.lastname}</span><br/>\n                <span>Location: {details.city}, {details.country}</span><br/>\n                <span>Joined: {membership.date_joined}</span><br/>\n                <img src={picture.thumbnail} alt=\"picture\"/><br/>\n                <button onClick={handleOnClick}>Close</button>\n            </Modal>\n        );\n    }\n    else {\n        return null;\n    }\n};\n\nexport default User","import React from \"react\";\nimport './App.css';\nimport {CSSTransitionGroup} from 'react-transition-group';\nimport {Route} from 'react-router-dom';\nimport {cloneDeep, uniq} from 'lodash';\n//import Header from \"./components/HeaderContent.js\";\nimport Home from \"./components/Home.js\";\nimport PlayList from \"./components/PlayList.js\";\nimport PlayDetailApp from \"./components/PlayDetailApp.js\";\nimport About from \"./components/About.js\";\nimport User from \"./components/User.js\";\nimport 'antd/dist/antd.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        //set states to initial values\n        this.state = {user: null,\n                      plays: [],\n                      genres: [],\n                      currentPlay: null,\n                      filteredPlays: [],\n                      favourites: [],\n                      savedPlayData: [],\n                      aboutIsOpen: false,\n                      userIsOpen: false};\n    }\n                            \n    async componentDidMount() {\n        if (!this.state.user) {\n            try {\n                const url = \"https://comp4513-assign2.herokuapp.com/user\";\n                const response = await fetch(url);\n                const data = await response.json();\n                this.setState({user: data});\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n\n        if (!this.state.plays.length) {\n            try {\n                const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\n                const response = await fetch(url);\n                const data = await response.json();\n                \n                this.setState({plays: data});\n                this.setState({filteredPlays: data});\n                \n                //add unique genres to state\n                var genres = [\"\"];\n                genres.push(...uniq(data.map((p) => p.genre)));\n                this.setState({genres: genres});\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n    }\n    \n    render() {\n        //methods\n        const setCurrentPlay = (play) => {\n            this.setState({currentPlay: play});\n        }\n        \n        const toggleAbout = () => {\n            if (this.state.aboutIsOpen) {\n                this.setState({aboutIsOpen: false});\n            }\n            else {\n                this.setState({aboutIsOpen: true});\n            }\n        }\n        \n        const toggleUser = () => {\n            if (this.state.userIsOpen) {\n                this.setState({userIsOpen: false});\n            }\n            else {\n                this.setState({userIsOpen: true});\n            }\n        }\n        \n        const setFilteredPlays = (filters, orderType, reset) => {\n            var filteredPlays = reset ? cloneDeep(this.state.plays) : cloneDeep(this.state.filteredPlays); \n            \n            //filter by title\n            if (filters.title) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.title.toLowerCase().includes(filters.title.toLowerCase()));\n            }\n            \n            //filter by beforeYear, if enabled\n            if (filters.before && filters.beforeYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate < filters.beforeYear);\n            }\n            \n            //filter by afterYear, if enabled\n            if (filters.after && filters.afterYear) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.likelyDate > filters.afterYear);\n            }\n            \n            //filter by genre\n            if (filters.genre) {\n                filteredPlays = filteredPlays.filter((p) => \n                                    p.genre === filters.genre);\n            }\n            \n            //order filtered plays\n            if (orderType) {\n                if (orderType === \"title\") {\n                    filteredPlays = filteredPlays.sort((a,b) => {\n                                        let aTitle = a.title.toLowerCase();\n                                        let bTitle = b.title.toLowerCase(); \n                                        if (aTitle > bTitle) {return 1}\n                                        else if (aTitle < bTitle) {return -1}\n                                        else {return 0}\n                                    });\n                }\n                else if (orderType === \"year\") {\n                    filteredPlays = filteredPlays.sort((a,b) => \n                                        Number(a.likelyDate) - Number(b.likelyDate));\n                }\n            }\n            \n//            console.log(filters);\n//            console.log(filteredPlays);\n            this.setState({filteredPlays: filteredPlays});\n        }\n        \n        const addToFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //prevent duplicates from being added\n            if (!favouritesCopy.find((p) => p.id === play.id)) {\n                favouritesCopy.push(play);\n            }\n            \n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const removeFromFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //get index of play and remove it\n            const index = favouritesCopy.findIndex((p) => p.id === play.id);\n            favouritesCopy.splice(index, 1);\n            this.setState({favourites: favouritesCopy});\n        }\n        \n        const savePlayData = (play, data) => {\n            const playDataCopy = cloneDeep(this.state.savedPlayData);\n            \n            //save play data with corresponding id\n            playDataCopy.push({id: play.id, data: data});\n            this.setState({savedPlayData: playDataCopy});\n        }\n        \n        return (\n            <div className=\"app\">\n                <Route path=\"/home\" exact>\n                    <CSSTransitionGroup transitionName=\"landing\" \n                                        transitionAppear={true} \n                                        transitionAppearTimeout={500}\n                                        transitionEnterTimeout={500} \n                                        transitionLeaveTimeout={500}>\n                        <Home setFilteredPlays={setFilteredPlays}/>\n                    </CSSTransitionGroup>\n                </Route>\n                <Route path=\"/play-list\" exact>\n                    <PlayList plays={this.state.filteredPlays}\n                              genres={this.state.genres}\n                              favourites={this.state.favourites}\n                              filters={this.state.filters}\n                              setFilteredPlays={setFilteredPlays} \n                              addToFavourites={addToFavourites}\n                              removeFromFavourites={removeFromFavourites}\n                              setCurrentPlay={setCurrentPlay}\n                              toggleAbout={toggleAbout}\n                              toggleUser={toggleUser}\n                              />\n                </Route>\n                <Route path=\"/play-detail\" exact>\n                    \n                    <PlayDetailApp play={this.state.currentPlay}\n                                   savedPlayData={this.state.savedPlayData}\n                                   favourites={this.state.favourites}\n                                   addToFavourites={addToFavourites}\n                                   removeFromFavourites={removeFromFavourites}\n                                   savePlayData={savePlayData}/>\n                </Route>\n                <About modalIsOpen={this.state.aboutIsOpen} toggleModal={toggleAbout}/>\n                <User modalIsOpen={this.state.userIsOpen} toggleModal={toggleUser} user={this.state.user}/>\n            </div>\n        );                \n    }\n}\n\nexport default App;\n\n//<Header toggleAbout={toggleAbout} toggleUser={toggleUser}/>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter><App/></BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n//ReactDOMServer.renderToString(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n//ReactDOMServer.renderToStaticMarkup(\n//    <React.StrictMode>\n//        <BrowserRouter><App/></BrowserRouter>\n//    </React.StrictMode>,\n//    document.getElementById('root')\n//);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}